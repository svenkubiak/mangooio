{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>mangoo I/O is a modern, intuitive, lightweight, and high-performance full-stack Java web framework designed for developers who value speed and simplicity.</p>"},{"location":"#built-on-a-robust-foundation","title":"Built on a Robust Foundation","text":"<p>At its core, mangoo I/O follows the classic MVC architecture, powered by the highly efficient Undertow web server from JBoss. Instead of reinventing the wheel, it leverages standard, production-ready Java libraries, ensuring reliability, maintainability, and top-tier performance\u2014without any unnecessary complexity or \"magic.\"</p>"},{"location":"#performance-code-quality","title":"Performance &amp; Code Quality","text":"<p>To maintain code quality and performance, each build undergoes rigorous testing:</p> <ul> <li>Static Code Analysis \u2013 Continuously validated against SonarQube with a comprehensive rule set of 1,300+ checks.</li> </ul>"},{"location":"#developer-friendly-easy-to-learn","title":"Developer-Friendly &amp; Easy to Learn","text":"<p>mangoo I/O is designed with developers in mind, offering:</p> <p>\u2705 A fluent and intuitive API \u2705 A minimal learning curve for Java developers \u2705 A lightweight yet powerful feature set</p> <p>With mangoo I/O, you get a framework that prioritizes developer experience, efficiency, and high performance\u2014making it an excellent choice for modern Java web development.</p>"},{"location":"#key-features","title":"Key Features","text":"<p>mangoo I/O offers a rich set of features designed for simplicity, scalability, and high performance:</p>"},{"location":"#developer-productivity","title":"\ud83d\ude80 Developer Productivity","text":"<ul> <li>Convention-over-configuration for intuitive development</li> <li>Hot-compiling development mode for instant feedback</li> <li>Straightforward persistence integration with popular data stores</li> <li>Easy-to-use template engine for dynamic content rendering</li> </ul>"},{"location":"#high-performance-scalability","title":"\u26a1 High Performance &amp; Scalability","text":"<ul> <li>Share-nothing, stateless architecture for effortless scaling</li> <li>Built-in caching for optimized performance</li> <li>Asynchronous email handling for efficient processing</li> <li>Event-driven architecture with a built-in EventBus</li> </ul>"},{"location":"#security-reliability","title":"\ud83d\udd12 Security &amp; Reliability","text":"<ul> <li>Strong cryptography with enforced security practices</li> <li>Built-in authentication for user access control</li> <li>Simplified form handling &amp; validation with clear APIs</li> <li>Flexible request filtering (global or per-request)</li> </ul>"},{"location":"#modern-web-api-support","title":"\ud83c\udf10 Modern Web &amp; API Support","text":"<ul> <li>First-class JSON handling for seamless API integration</li> <li>Server-Sent Events (SSE) support for real-time communication</li> <li>Programmatic routing configuration for flexibility</li> </ul>"},{"location":"#tooling-deployment","title":"\ud83d\udee0 Tooling &amp; Deployment","text":"<ul> <li>Built-in scheduling for recurring tasks</li> <li>Flexible testing tools for robust applications</li> <li>Simple deployment &amp; CI/CD integration</li> <li>Administrative interface for app monitoring and management</li> <li>i18N internationalization for multilingual support</li> </ul> <p>And much more... \ud83d\ude80</p>"},{"location":"administration/","title":"Administration","text":"<p>mangoo I/O includes a built-in administrative interface, providing access to framework data such as metrics, cache, scheduler, and logger configuration.</p>"},{"location":"administration/#enabling-the-administrative-interface","title":"Enabling the Administrative Interface","text":"<p>By default, the administrative interface is disabled. To enable it, update the <code>config.yaml</code> file:</p> <pre><code>application:\n  admin:\n    enable: true\n</code></pre>"},{"location":"administration/#authentication","title":"Authentication","text":"<p>Access to the interface is secured with HTTP Basic Authentication. The credentials must be specified in the <code>config.yaml</code> file:</p> <pre><code>application:\n  admin:\n    username: admin\n    password: admin\n</code></pre>"},{"location":"administration/#accessing-the-interface","title":"Accessing the Interface","text":"<p>Once enabled, the administrative interface is accessible at:</p> <pre><code>&lt;host&gt;:&lt;port&gt;/@admin\n</code></pre>"},{"location":"administration/#enabling-metrics","title":"Enabling Metrics","text":"<p>The admin interface includes request counting and process time calculation metrics. By default, metrics are disabled. To enable them, modify <code>config.yaml</code>:</p> <pre><code>metrics:\n  enable: true\n</code></pre> <p>This ensures that system performance and request handling statistics are available through the administrative dashboard.</p>"},{"location":"async/","title":"Async","text":"<p>mangoo I/O supports a simple <code>EventBus</code> mechanism, allowing asynchronous event handling. To start using the <code>EventBus</code>, inject it into your logic:</p> <pre><code>@Inject\nprivate EventBus eventBus;\n</code></pre>"},{"location":"async/#eventbus-functions","title":"EventBus Functions","text":"<p>The <code>EventBus</code> provides essential functions for event handling, including registering, unregistering, and publishing events. Example usage:</p> <pre><code>MyListener myListener = new MyListener();\neventBus.register(\"queueName\", myListener);\neventBus.publish(\"This is a test event\");\neventBus.unregister(myListener);\n</code></pre>"},{"location":"async/#subscriber-implementation","title":"Subscriber Implementation","text":"<p>To receive events, a subscriber class must implement the <code>Subscriber</code> interface:</p> <pre><code>public class MySubscriber implements Subscriber&lt;String&gt; {\n    @Override\n    public void receive(String payload) {\n        // Handle received event data\n    }\n}\n</code></pre>"},{"location":"async/#payload-handling","title":"Payload Handling","text":"<p>The payload type depends on the data being passed to the receiver. In this example, a <code>String</code> is used, but other data types can be utilized as needed.</p>"},{"location":"authentication/","title":"Authentication","text":"<p>mangoo I/O provides built-in authentication support, including two-factor authentication, ensuring secure access control.</p>"},{"location":"authentication/#custom-authentication","title":"Custom Authentication","text":"<p>mangoo I/O allows for custom registration and login processes. While it does not store user credentials, it provides functions to simplify authentication handling.</p> <p>The <code>Authentication</code> class can be injected into a controller class for streamlined authentication management:</p> <pre><code>public Response login(Authentication authentication) {\n    ...\n    return Response.ok();\n}\n</code></pre>"},{"location":"authentication/#password-hashing","title":"Password Hashing","text":"<p>Built-in authentication in mangoo I/O utilizes Argon2 for password hashing. You can generate a hashed password using:</p> <pre><code>CodecUtils.hashArgon2(\"password\", \"salt\");\n</code></pre> <p>Once you have hashed the password during registration, store it securely with your user data. mangoo I/O does not manage password storage.</p>"},{"location":"authentication/#user-authentication","title":"User Authentication","text":"<p>To authenticate users, compare the stored hashed password with the provided clear-text password:</p> <pre><code>if (authentication.validLogin(\"subject\", \"password\", \"salt\", \"hash\")) {\n    authentication.login(\"subject\");\n}\n</code></pre>"},{"location":"authentication/#authentication-methods","title":"Authentication Methods","text":"<p>The <code>Authentication</code> class provides essential methods for managing user authentication:</p> <pre><code>getAuthenticatedUser(); // Retrieves the logged-in user\nlogout(); // Logs out the user\nremember(boolean remember); // Extends cookie and token lifetime\n</code></pre>"},{"location":"authentication/#route-protection","title":"Route Protection","text":"<p>To secure specific classes or methods, use the predefined authentication method in <code>Bootstrap.java</code>:</p> <pre><code>Bind.controller(BasicAuthenticationController.class).withRoutes(\n        On.get().to(\"/\").respondWith(\"index\").withAuthentication()\n);\n</code></pre> <p>Authentication can be enforced at both the controller and request levels.</p>"},{"location":"authentication/#two-factor-authentication","title":"Two-Factor Authentication","text":"<p>The <code>Authentication</code> class supports Two-Factor Authentication (2FA) for enhanced security. You can integrate it into your authentication workflow with methods such as:</p> <pre><code>validSecondFactor(String secret, int number);\n</code></pre> <p>This feature provides an additional layer of security, ensuring robust authentication mechanisms in your application.</p>"},{"location":"bootstrap/","title":"Bootstrap","text":"<p>In some cases, it is useful to hook into the startup process of a Mangoo I/O application, such as initializing a database connection. For these cases, Mangoo I/O provides the <code>MangooBootstrap</code> interface, which can be implemented in a class within the <code>/conf</code> package of your application.</p>"},{"location":"bootstrap/#implementing-the-bootstrap-class","title":"Implementing the Bootstrap Class","text":"<p>The <code>Bootstrap</code> class allows you to execute code at different stages of the application lifecycle. Below is a basic implementation:</p> <pre><code>package app;\n\nimport io.mangoo.interfaces.MangooBootstrap;\n\npublic class Bootstrap implements MangooBootstrap {\n\n    @Override\n    public void initializeRoutes() {\n        // Executed when routes are initialized\n    }\n\n    @Override\n    public void applicationInitialized() {\n        // Executed after the application has been initialized\n    }\n\n    @Override\n    public void applicationStarted() {\n        // Executed after the application has fully started\n    }\n\n    @Override\n    public void applicationStopped() {\n        // Executed when the application is shutting down\n    }\n}\n</code></pre> <p>The class name does not need to be <code>Bootstrap</code>, but it must implement the <code>MangooBootstrap</code> interface. Additionally, you must bind the implementation using Google Guice in the <code>Module</code> class.</p>"},{"location":"bootstrap/#configuring-the-module-class","title":"Configuring the Module Class","text":"<p>The <code>Module</code> class is also located in the <code>/conf</code> package and is responsible for defining dependency bindings using Google Guice. You can bind the <code>MangooBootstrap</code> implementation as shown below:</p> <pre><code>package app;\n\nimport com.google.inject.AbstractModule;\nimport io.mangoo.interfaces.MangooBootstrap;\n\npublic class Module extends AbstractModule {\n    @Override\n    protected void configure() {\n        bind(MangooBootstrap.class).to(Bootstrap.class);\n    }\n}\n</code></pre> <p>The <code>Module</code> class can also be used to define additional custom Google Guice bindings as needed.</p>"},{"location":"caching/","title":"Cache","text":"<p>mangoo I/O comes with a pre-configured application cache powered by Caffeine. To utilize caching in your application, inject the <code>Cache</code> class:</p> <pre><code>@Inject\nprivate Cache cache;\n</code></pre>"},{"location":"caching/#cache-operations","title":"Cache Operations","text":"<p>The <code>Cache</code> class provides essential functions for managing cached values, including adding, retrieving, and removing entries.</p>"},{"location":"caching/#adding-a-value-to-the-cache","title":"Adding a Value to the Cache","text":"<pre><code>cache.put(\"foo\", \"bar\");\n</code></pre>"},{"location":"caching/#retrieving-a-cached-value","title":"Retrieving a Cached Value","text":"<pre><code>String value = cache.get(\"foo\");\n</code></pre>"},{"location":"caching/#removing-a-value-from-the-cache","title":"Removing a Value from the Cache","text":"<pre><code>cache.remove(\"foo\");\n</code></pre>"},{"location":"caching/#cache-expiration","title":"Cache Expiration","text":"<p>Cached entries expire 30 days after the last access. If a value is neither read nor updated within this period, it will be automatically evicted.</p>"},{"location":"caching/#using-a-fallback-method","title":"Using a Fallback Method","text":"<p>In addition to standard cache operations, you can use a get call with a fallback method:</p> <pre><code>String value = cache.get(\"foo\", v -&gt; getValue());\n</code></pre> <p>If the key <code>\"foo\"</code> exists in the cache, its value is returned. If not, the fallback method <code>getValue()</code> is invoked, its return value is cached under the key <code>\"foo\"</code>, and then returned.</p>"},{"location":"changelog-archived/","title":"Changelog","text":""},{"location":"changelog-archived/#version-7190","title":"Version 7.19.0","text":"<p>Released at 17.11.2023</p> <p>Full Changelog</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>commons-io 2.14.0 -&gt; 2.15.0</li> <li>morphia-core 2.4.6 -&gt; 2.4.8</li> <li>classgraph 4.8.163 -&gt; 4.8.165</li> <li>mockito-core 5.6.0 -&gt; 5.7.0</li> <li>fury-core 0.2.1 -&gt; 0.3.0</li> <li>junit 5.10.0 -&gt; 5.10.1</li> <li>mongodb-driver 4.11.0 -&gt; 4.11.1</li> <li>jackson 2.15.0 -&gt; 2.16.0</li> <li>commons-compress 1.24.0 -&gt; 1.25.0</li> <li>bouncy-castle 1.76 -&gt; 1.77</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7180","title":"Version 7.18.0","text":"<p>Released at 25.10.2023</p> <p>Full Changelog</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>fury-core 0.1.1 -&gt; 0.2.1</li> <li>commons-io 2.13.0 -&gt; 2.14.0</li> <li>morphia-core 2.4.5 -&gt; 2.4.6</li> <li>instancio 3.3.0 -&gt; 3.3.1</li> <li>mockito-core 5.5.0 -&gt; 5.6.0</li> <li>guava 32.1.2-jre -&gt; 32.1.3-jre</li> <li>mongodb 4.10.2 -&gt; 4.11.0</li> <li>undertow-core 2.3.8.Final -&gt; 2.3.10.Final</li> <li>classgraph 4.8.162 -&gt; 4.8.163</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7170","title":"Version 7.17.0","text":"<p>Released at 20.09.2023</p> <p>Full Changelog</p> <ul> <li>Added Fury (https://github.com/alipay/fury) for faster serialization/deserialization</li> <li>Version bumps (svenkubiak)<ul> <li>instancio-junit 3.1.0 -&gt; 3.3.0</li> <li>morphia-core 2.4.2 -&gt; 2.4.5</li> <li>commons-compress 1.23.0 -&gt; 1.24.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7160","title":"Version 7.16.0","text":"<p>Released at 24.08.2023</p> <p>Full Changelog</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>morphia-core 2.3.6 -&gt; 2.4.2</li> <li>commons-lang3 3.12.0 -&gt; 3.13.0</li> <li>bouncy-castle 1.75 -&gt; 1.76</li> <li>instancio-junit 3.0.0 -&gt; 3.1.0</li> <li>guava 32.1.1-jre -&gt; 32.1.2-jre</li> <li>classgraph 4.8.161 -&gt; 4.8.162</li> <li>undertow-core 2.3.7 -&gt; 2.3.8</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7150","title":"Version 7.15.0","text":"<p>Released at 24.07.2023</p> <p>Full Changelog</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>commons-codec 1.15 -&gt; 1.16.0</li> <li>mongodb 4.9.1 -&gt; 4.10.2</li> <li>bouncycastle 1.74 -&gt; 1.75</li> <li>mockito-core 5.3.0 -&gt; 5.4.1</li> <li>morphia-core 2.3.5 -&gt; 2.3.6</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7140","title":"Version 7.14.0","text":"<p>Released at 18.06.2023</p> <p>Full Changelog</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>guava 31.1-jre -&gt; 32.0.1-jre</li> <li>jackson 2.15.1 -&gt; 2.15.2</li> <li>commons-io 2.12.0 -&gt; 2.13.0</li> <li>undertow-core 2.3.6.Final -&gt; 2.3.7.Final</li> <li>bouncycastle 1.73 -&gt; 1.74</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7130","title":"Version 7.13.0","text":"<p>Released at 22.05.2023</p> <p>Full Changelog</p> <ul> <li>Fixed an issue where a filter returned a redirect but the controller was invoked additionally (svenkubiak)</li> <li>Moved @FilterWith and @Run annotation close to the corresponding packages (svenkubiak)</li> <li>Removed @admin overview of configured routes (svenkubiak)</li> <li>Added jackson-afterburner module (svenkubiak)</li> <li>Added option to dispose a cookie (Svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb 4.9.0 -&gt; 4.9.1</li> <li>bouncy-castle 1.72 -&gt; 1.73</li> <li>mockito-core 5.2.0 -&gt; 5.3.0</li> <li>morphia-core 2.3.1 -&gt; 2.3.2</li> <li>junit 5.9.2 -&gt; 5.9.3</li> <li>classgraph 4.8.156 -&gt; 4.8.158</li> <li>undertow-core 2.3.5.Final -&gt; 2.3.6.Final</li> <li>jackson 2.15.0 -&gt; 2.15.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7120","title":"Version 7.12.0","text":"<p>Released at 27.03.2023</p> <ul> <li>Added additional cache method fetch() and getAll() (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb 4.8.2 -&gt; 4.9.0</li> <li>undertow-core 2.3.3.Final -&gt; 2.3.5.Final</li> <li>log4j 2.19.0 -&gt; 2.20.0</li> <li>mockito-core 5.1.1 -&gt; 5.2.0</li> <li>classgraph 4.8.156 -&gt; 4.8.156</li> <li>commons-compress 1.22 -&gt; 1.23</li> <li>json-path 2.7.0 -&gt; 2.8.0</li> <li>cron-utils 9.2.0 -&gt; 9.2.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7110","title":"Version 7.11.0","text":"<p>Released at 10.02.2023</p> <ul> <li>Refactored handling of unrendered body content</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.3.2.Final -&gt; 2.3.3.Final</li> <li>mongodb 4.8.1 -&gt; 4.8.2</li> <li>freemarker 2.3.31 -&gt; 2.3.32</li> <li>mockito 4.11.0 -&gt; 5.1.1</li> <li>jackson-databind 2.14.1 -&gt; 2.14.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-7100","title":"Version 7.10.0","text":"<p>Released at 22.12.2022</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.8.149 -&gt; 4.8.152</li> <li>mockito-core 4.8.1 -&gt; 4.8.2</li> <li>cactoos 0.54.0 -&gt; 0.55.0</li> <li>commons-compress 1.21 -&gt; 1.22</li> <li>prettytime 5.0.4.Final -&gt; 5.0.6.Final</li> <li>jackson-databin 2.14.0-rc3 -&gt; 2.14.1</li> <li>morphia-core 2.2.9 -&gt; 2.2.10</li> <li>okhttp-eventsource 2.7.1 -&gt; 3.0.0</li> <li>httpmime 4.5.13 -&gt; 4.5.14</li> <li>undertow-core 2.3.0.Final -&gt; 2.3.2.Final</li> <li>slf4j 2.0.5 -&gt; 2.0.6</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-790","title":"Version 7.9.0","text":"<p>Released at 31.10.2022</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Switched to V2.local paesto for all cookies (svenkubiak)</li> <li>Added new convenient functions for creating and parsing paseto (JWT) Tokens (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>slf4j 2.0.0 -&gt; 2.0.2</li> <li>mongodb 4.7.1 -&gt; 4.7.2</li> <li>undertow-core 2.3.0.Beta1 -&gt; 2.3.0.Final</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-780","title":"Version 7.8.0","text":"<p>Released at 26.09.2022</p> <ul> <li>Added additional Async persistence methods (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mockito-core 4.7.0 -&gt; 4.8.0</li> <li>prettytime 5.0.3.Final -&gt; 5.0.4.Final</li> <li>jackson-databind 2.13.3 -&gt; 2.13.4</li> <li>morphia-core 2.2.7 -&gt; 2.2.9</li> <li>cactoos 0.53.0 -&gt; 0.54.0</li> <li>slf4j 1.7.36 -&gt; 2.0.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-770","title":"Version 7.7.0","text":"<p>Released at 19.08.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.3.0.Alpha1 -&gt; 2.3.0.Alpha2</li> <li>junit 5.9.0-RC1 -&gt; 5.9.0</li> <li>cron-utils 9.1.7 -&gt; 9.1.8</li> <li>mongodb 4.7.0 -&gt; 4.7.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-760","title":"Version 7.6.0","text":"<p>Released at 20.07.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>re2j 1.6 -&gt; 1.7</li> <li>log4j 2.17.2 -&gt; 2.18.0</li> <li>cron-utils 9.1.2 -&gt; 9.1.7</li> <li>cactoos 0.51.0 -&gt; 0.52.0</li> <li>freemarker-java8 2.0.0 -&gt; 2.1.0</li> <li>okhttp-eventsource 2.6.1 -&gt; 2.6.2</li> <li>mongodb 4.7.0 -&gt; 4.7.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-750","title":"Version 7.5.0","text":"<p>Released at 20.06.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jackson-databind 2.13.2.2 -&gt; 2.13.3</li> <li>prettytime 5.0.2.Final -&gt; 5.0.3.Final</li> <li>morphia 2.2.6 -&gt; 2.2.7</li> <li>mockito-core 4.6.0 -&gt; 4.6.1</li> <li>undertow-core 2.2.17-Final -&gt; 2.3.0-Alpha1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-740","title":"Version 7.4.0","text":"<p>Released at 03.05.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow 2.2.16.Final -&gt; 2.2.17.Final</li> <li>classgraph 4.8.143 -&gt; 4.8.146</li> <li>mongodb 4.5.0 -&gt; 4.6.0</li> <li>mockito-core 4.4.0 -&gt; 4.5.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-732","title":"Version 7.3.2","text":"<p>Released at 29.03.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jackson-databind 2.13.2.1 -&gt; 2.13.2.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-731","title":"Version 7.3.1","text":"<p>Released at 25.03.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jackson-databind 2.13.2 -&gt; 2.13.2.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-730","title":"Version 7.3.0","text":"<p>Released at 23.03.2022</p> <ul> <li>Complete refactoring of ServerSentEvent support (svenkubiak)</li> <li>Removed WebSocket support (svenkubiak)</li> <li>Switched Cache implementation from ehCache to Guava (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>wildfly-common 1.5.4 -&gt; 1.6.0</li> <li>jackson-databind 2.13.1 -&gt; 2.13.2</li> <li>awaitility 4.1.1 -&gt; 4.2.0</li> <li>mockito-core 4.3.1 -&gt; 4.4.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-720","title":"Version 7.2.0","text":"<p>Released at 01.03.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>embedded mongodb 6.0.1 -&gt; 6.0.2</li> <li>json-path 2.6.0 -&gt; 2.7.0</li> <li>undertow-core 2.2.14.Final -&gt; 2.2.15.Final</li> <li>classgraph 4.8.138 -&gt; 4.8.141</li> <li>mongodb 4.4.1 -&gt; 4.5.0</li> <li>log4j 2.17.1 -&gt; 2.17.2</li> <li>guava 31.0.1-jre -&gt; 31.1-jre</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-710","title":"Version 7.1.0","text":"<p>Released at 28.01.2022</p> <ul> <li>Changed mail handling from SimpleMail to Jakarta (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb 4.4.0 -&gt; 4.4.1</li> <li>okhttp-eventsource 2.4.0 -&gt; 2.5.0</li> <li>jboss-logging 3.4.2.Final -&gt; 3.4.3.Final</li> <li>guice 5.0.1 -&gt; 5.1.0</li> <li>mockito-core 4.2.0 -&gt; 4.3.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-701","title":"Version 7.0.1","text":"<p>Released at 06.01.2022</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.17.0 -&gt; 2.17.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-700","title":"Version 7.0.0","text":"<p>Released at 24.12.2021</p> <ul> <li>#509 Removed build-in rate limit handling (svenkubiak)</li> <li>#504 Removed slim-jar deployment feature (svenkubiak)</li> <li>#501 Removed JCasbin and authroization handling (svenkubiak)</li> <li>#483 Switched Scheduler from Quartz to ScheduledExecutorService (svenkubiak)</li> <li>Require and Support Java 17 (svenkubiak)</li> <li>Removed authenticity handling (svenkubiak)</li> <li>Switched (password) hashing vom JBcrypt to Argon2 (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>awaitility 4.1.0 -&gt; 4.1.1</li> <li>reflections 0.10.1 -&gt; 0.10.2</li> <li>classgraph 4.8.128 -&gt; 4.8.138</li> <li>mongodb 4.3.2 -&gt; 4.4.0</li> <li>cron-utils 9.1.5 -&gt; 9.1.6</li> <li>morphia-core 2.2.2 -&gt; 2.2.3</li> <li>undertow 2.2.12.Final -&gt; 2.2.13.Final</li> <li>mockito-core 4.1.0 -&gt; 4.3.0</li> <li>bouncy castle 1.69 -&gt; 1.70</li> <li>log4j 2.14.1 -&gt; 2.17.0</li> <li>hamcrest-date 2.0.7 -&gt; 2.0.8</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6152","title":"Version 6.15.2","text":"<p>Released at 19.12.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.16.0 -&gt; 2.17.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6151","title":"Version 6.15.1","text":"<p>Released at 15.12.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.15.0 -&gt; 2.16.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6150","title":"Version 6.15.0","text":"<p>Released at 10.12.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.14.1 -&gt; 2.15.0</li> <li>maven-core 3.8.3 -&gt; 3.8.4</li> <li>mongodb 4.3.1 -&gt; 4.4.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6140","title":"Version 6.14.0","text":"<p>Released at 26.10.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>maven 3.8.2 -&gt; 3.8.3</li> <li>junit 5.8.0 -&gt; 5.8.1</li> <li>jpasteo 0.6.0 -&gt; 0.7.0</li> <li>undertow-core 2.2.10.Final -&gt; 2.2.12.Final</li> <li>prettytime 2.2.1 -&gt; 2.2.2</li> <li>jcasbin 1.13.1 -&gt; 1.16.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6130","title":"Version 6.13.0","text":"<p>Released at 30.08.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jcasbin 1.13.0 -&gt; 1.13.1</li> <li>plexus-utils 3.3.0 -&gt; 3.4.0</li> <li>ehcache-clustered 3.9.4 -&gt; 3.9.6</li> <li>classgraph 4.8.110 -&gt; 4.9.111</li> <li>mongodb 4.3.0 -&gt; 4.3.1</li> <li>mockito-core 3.11.2 -&gt; 3.12.4</li> <li>greenmail-standalone 1.6.4 -&gt; 1.6.5</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6120","title":"Version 6.12.0","text":"<p>Released at 26.07.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow 2.2.8.Final -&gt; 2.2.9.Final</li> <li>bouncycastle 1.68 -&gt; 1.69</li> <li>commons-io 2.9.0 -&gt; 2.11.0</li> <li>mockito-core 3.11.0 -&gt; 3.11.1</li> <li>jcasbin 1.10.0 -&gt; 1.13.0</li> <li>simple-mail 6.6.0 -&gt; 6.6.1</li> <li>okhttp-eventsource 2.3.1 -&gt; 2.3.2</li> <li>classgraph 4.8.109 -&gt; 4.9.110</li> <li>commons-compress 1.20 -&gt; 1.21</li> <li>jackson-databind 2.12.3 -&gt; 2.13.0-rc1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6110","title":"Version 6.11.0","text":"<p>Released at 07.06.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>cactoos-matchers 0.24 -&gt; 0.25</li> <li>morphia-core 2.1.5 -&gt; 2.2.1</li> <li>simple-mail 6.5.2 -&gt; 6.6.0</li> <li>jcasbin 1.8.4 -&gt; 1.10.0</li> <li>awaitility 4.0.3 -&gt; 4.1.0</li> <li>greenmail 1.6.3 -&gt; 1.6.4</li> <li>mockito-core 3.9.0 -&gt; 3.10.0</li> <li>undertow-core 2.2.8.Final -&gt; 2.2.9.Final</li> <li>commons-io 2.8.0 -&gt; 2.9.0</li> <li>json-path 2.5.0 -&gt; 2.6.0</li> <li>classgraph 4.8.106 -&gt; 4.8.108</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-6100","title":"Version 6.10.0","text":"<p>Released at 03.05.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>mockito-core 3.8.0 -&gt; 3.9.0</li> <li>mongodb 4.2.2 -&gt; 4.2.3</li> <li>simple-mail 6.5.0 -&gt; 6.5.2</li> <li>jackson-databind 2.12.2 -&gt; 2.12.3</li> <li>morphia-core 2.1.4 -&gt; 2.1.5</li> <li>jcasbin 1.7.4 -&gt; 1.8.4</li> <li>ehcache-clustered 3.9.0 -&gt; 3.9.3</li> <li>classgraph 4.8.104 -&gt; 4.8.105</li> <li>cactoos 0.49 -&gt; 0.50</li> <li>prettytime 5.0.0 -&gt; 5.0.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-690","title":"Version 6.9.0","text":"<p>Released at 06.04.2021</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>commons-lang3 3.11 -&gt; 3.12.0</li> <li>jackson-databind 2.12.1 -&gt; 2.12.2</li> <li>jcasbin 1.6.4 -&gt; 1.7.2</li> <li>undertow-core 2.2.4.Final -&gt; 2.2.7.Final</li> <li>re2j 1.5 -&gt; 1.6</li> <li>guava 1.6.1 -&gt; 1.6.2</li> <li>classgraph 4.8.102 -&gt; 4.8.104</li> <li>greenmail 1.6.2 -&gt; 1.6.3</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-680","title":"Version 6.8.0","text":"<p>Released at 01.03.2021</p> <ul> <li>#497 Added async persistence save and delete (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.8.98 -&gt; 4.8.102</li> <li>jcasbin 1.6.3 -&gt; 1.6.4</li> <li>plexus-archiver 4.2.3 -&gt; 4.2.4</li> <li>greenmail 1.6.1 -&gt; 1.6.2</li> <li>jpaseto 0.5.0 -&gt; 0.6.0</li> <li>simplejavamail 6.4.4 -&gt; 6.5.0</li> <li>freemarker 2.3.0 -&gt; 2.3.1</li> <li>cactoos-matcher 0.23 -&gt; 0.24</li> <li>mockito-core 3.7.7 -&gt; 3.8.0</li> <li>jodd-propds 6.0.1 -&gt; 6.0.2</li> </ul> </li> </ul> <p>Released at 20.01.2021</p> <ul> <li>#490 Fixed form localization issue (svenkubiak)</li> <li>#489 Fixed on-the-fly minification not working correctly (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>guave-jre 30.0-jre -&gt; 30.1-jre</li> <li>prettytime 4.0.4.Final -&gt; 5.0.0.Final</li> <li>bouncycastle 1.67 -&gt; 1.68</li> <li>jcasbin 1.6.0 -&gt; 1.6.3</li> <li>cactoos 0.48 -&gt; 0.49</li> <li>cactoos-matchers 0.22 -&gt; 0.23</li> <li>classgraph 4.8.97 -&gt; 4.8.98</li> <li>mockito-core 3.6.28 -&gt; 3.7.7</li> <li>jackson-databind 2.12.0 -&gt; 2.12.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-660","title":"Version 6.6.0","text":"<p>Released at 13.12.2020</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.8.92 -&gt; 4.8.95</li> <li>jBcrypt 0.4.1 -&gt; 0.4.3</li> <li>undertow-core 2.2.2.Final -&gt; 2.2.3.Final</li> <li>morphia-core 2.1.0 -&gt; 2.1.3</li> <li>json-path 2.4.0 -&gt; 2.5.0</li> <li>guave-jre 30.0-jre -&gt; 30.1-jre</li> <li>prettytime 4.0.4.Final -&gt; 5.0.0.Final</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-651","title":"Version 6.5.1","text":"<p>Released at 02.12.2020</p> <ul> <li>Fixed a bug that was point to a wrong config key (svenkubiak)</li> <li>Fixed a bug in archetype config (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-650","title":"Version 6.5.0","text":"<p>Released at 30.11.2020</p> <ul> <li>Fixed bug that did not serve admin assets when admin was not enabled (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>org.simplejavamail 6.4.3 -&gt; 6.4.4</li> <li>mockito-core 3.5.15 -&gt; 3.6.0</li> <li>cactoos 0.46 -&gt; 0.48</li> <li>bouncycastle 1.66 -&gt; 1.67</li> <li>greenmail 1.60 -&gt; 1.61</li> <li>log4j 2.13.3 -&gt; 2.14.0</li> <li>morphia-core 2.0.2 -&gt; 2.1.0</li> <li>cactoos-matchers 0.21 -&gt; 0.22</li> <li>jackson-databind 2.12.0-rc1 -&gt; 2.12.0</li> <li>classgraph 4.8.90 -&gt; 4.8.92</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-640","title":"Version 6.4.0","text":"<p>Released at 19.10.2020</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>junit 5.7.0-M1 -&gt; 5.7.0</li> <li>junit-platform 1.7.0-M1 -&gt; 1.7.0</li> <li>undertow-core 2.1.3.Final -&gt; 2.2.2.Final</li> <li>morphia-core 2.0.0 -&gt; 2.0.2</li> <li>jodd-props 5.1.6 -&gt; 6.0.1</li> <li>mockito-core 3.5.10 -&gt; 3.5.11</li> <li>jcasbin 1.5.0 -&gt; 1.6.0</li> <li>jackson-databind 2.11.2 -&gt; 2.11.3</li> <li>re2j 1.4 -&gt; 1.5</li> <li>maven-resolver 1.4.2 -&gt; 1.6.1</li> <li>guava 29.0-jre -&gt; 30.0-jre</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-630","title":"Version 6.3.0","text":"<p>Released at 11.09.2020</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jodd-props 5.1.5 -&gt; 5.1.6</li> <li>commons-validator 1.6 -&gt; 1.7</li> <li>mockito-core 3.4.6 -&gt; 3.5.10</li> <li>greenmail 1.5.14 -&gt; 1.6.0</li> <li>classgraph 4.8.87 -&gt; 4.8.90</li> <li>commons-codec 1.14 -&gt; 1.15</li> <li>zt-exec 1.11 -&gt; 1.12</li> <li>cactoos-matcher 0.18 -&gt; 0.19</li> <li>commons-io 2.7 -&gt; 2.8.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-620","title":"Version 6.2.0","text":"<p>Released at 07.08.2020</p> <ul> <li>Added option to add multiple credentials for persistence (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>morphia-core 2.0.0-RC1 -&gt; 2.0.0</li> <li>jodd-props 5.1.4 -&gt; 5.1.5</li> <li>jcasbin 1.4.0 -&gt; 1.5.0</li> <li>bouncycastle 1.65.01 -&gt; 1.66</li> <li>commons-lang3 3.10 -&gt; 3.11</li> <li>mockito-core 3.3.3 -&gt; 3.4.6</li> <li>SimpleMail 6.1.0 -&gt; 6.4.3</li> <li>Jackson-Databind 2.11.1 -&gt; 2.11.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-610","title":"Version 6.1.0","text":"<p>Released at 06.07.2020</p> <ul> <li>#471 Added cache metrics to admin dashboard (svenkubiak)</li> <li>Added /@admin/health endpoint (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.1.2.Final -&gt; 2.1.3.Final</li> <li>re2j 1.3 -&gt; 1.4</li> <li>classgraph 4.8.83 -&gt; 4.8.87</li> <li>SimpleMail 6.0.4 -&gt; 6.0.5</li> <li>jackson-databind 2.11.1 -&gt; 2.11.1</li> <li>greenmail 1.5.13 -&gt; 1.5.14</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-600","title":"Version 6.0.0","text":"<p>Released at 03.06.2020</p> <ul> <li>#466 Removed 2FA from BasicAuthentication (svenkubiak)</li> <li>#465 Added persistence example to archetype (svenkubiak)</li> <li>#464 Checked and removed unused enums (svenkubiak)</li> <li>#463 Re-organized Maven dependencies structure (svenkubiak)</li> <li>#458 Removed SASS and LESS precompiler (svenkubiak)</li> <li>#444 Switched to Paseto for JWT handling (svenkubiak)</li> <li>#444 Renamed Filter interfaces (svenkubiak)</li> <li>#439 Switched Admin UI to Bulma (svenkubiak)</li> <li>#436 Switched Authentication of Admin UI (svenkubiak)</li> <li>#434 Added persistence to core (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Removed all deprecations (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.30.Final -&gt; 2.1.2.Final</li> <li>classgraph 4.8.68 -&gt; 4.8.80</li> <li>junit 5.6.1 -&gt; 5.7.0-M1</li> <li>junit-platform 1.6.1 -&gt; 1.7.0-M1</li> <li>greenmail 1.5.12 -&gt; 1.5.13</li> <li>guava 28.2-jre -&gt; 29.0-jre</li> <li>commons-codec 1.12 -&gt; 1.14</li> <li>log4j2 2.13.1 -&gt; 2.13.2</li> <li>freemarker-java8 1.3.0 -&gt; 2.0.0</li> <li>jackson-databind 2.11.0.rc1 -&gt; 2.11.0</li> <li>awaitility 4.0.2 -&gt; 4.0.3</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5160","title":"Version 5.16.0","text":"<p>Released at 09.04.2020</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mockito-core 3.3.0 -&gt; 3.3.3</li> <li>guice 4.2.2 -&gt; 4.2.3</li> <li>junit 5.6.0 -&gt; 5.6.1</li> <li>junit-platform 1.6.0 -&gt; 1.6.1</li> <li>classgraph 4.8.65 -&gt; 4.8.68</li> <li>commons-lang3 3.9 -&gt; 3.10</li> <li>jackson-databind 2.10.3 -&gt; 2.11.0.rc1</li> <li>greenmail 1.5.11 -&gt; 1.5.12</li> <li>bcprov-jdk15on 1.64 -&gt; 1.65</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5150","title":"Version 5.15.0","text":"<p>Released at 12.03.2020</p> <ul> <li>Added startup check if application is started as root (svenkubiak)</li> <li>Switched RegEx parsing to Google re2j (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>httpmime 4.5.11 -&gt; 4.5.12</li> <li>freemarker 2.3.29 -&gt; 2.3.30</li> <li>classgraph 4.8.62 -&gt; 4.8.65</li> <li>mockito-core 3.2.4 -&gt; 3.3.0</li> <li>prettytime 4.0.3.Final -&gt; 4.0.4.Final</li> <li>log4j 2.13.0 -&gt; 2.13.1</li> <li>jackson-databind 2.10.2 -&gt; 2.10.3</li> <li>jodd-props 5.1.3 -&gt; 5.1.4</li> <li>undertow 2.0.29.Final -&gt; 2.0.30.Final</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5140","title":"Version 5.14.0","text":"<p>Released at 14.02.2020</p> <ul> <li>#454 Switched to JavaSimpleMail (svenkubiak)</li> <li>#452 Updated AdminLTE to latest version (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>http-mime 4.5.10 -&gt; 4.5.11</li> <li>prettytime 4.0.2.Final -&gt; 4.0.3.Final</li> <li>classgraph 4.8.60 -&gt; 4.8.62</li> <li>cactoos 0.43 -&gt; 0.44</li> <li>jodd-props 5.1.0-20190624 -&gt; 5.1.3</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5132","title":"Version 5.13.2","text":"<p>Released at 19.01.2020</p> <ul> <li>No changes release due to Maven Central issues (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-5131","title":"Version 5.13.1","text":"<p>Released at 17.01.2020</p> <ul> <li>No changes release due to Maven Central issues (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-5130","title":"Version 5.13.0","text":"<p>Released at 14.01.2020</p> <ul> <li>config.props does now support empty values (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.28.Final -&gt; 2.0.29.Final</li> <li>classgraph 4.8.54 -&gt; 4.8.60</li> <li>mockito-core 3.1.0 -&gt; 3.2.4</li> <li>cactoos 0.42 -&gt; 0.43</li> <li>log4j 2.12.1 -&gt; 2.13.0</li> <li>guava 28.1-jre -&gt; 28.2-jre</li> <li>awaitility 4.0.1 -&gt; 4.0.2</li> <li>jackson 2.10.1 -&gt; 2.10.2</li> <li>reflections 0.9.11 -&gt; 0.9.12</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5120","title":"Version 5.12.0","text":"<p>Released at 28.11.2019</p> <ul> <li>#443 Enhanced Scheduler with \"Every\" option (svenkubiak)</li> <li>#442 Minor refactorings on Form object to make it more fluent (svenkubiak)</li> <li>#441 Wrapped eMail implementation to make it more fluent (svenkubiak)</li> <li>#440 Added option to inject config values (svenkubiak)</li> <li>#435 Added new ThinJAR generation (svenkubiak)</li> <li>Updated Admin area to AdminLTE3 Final (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.8.52 -&gt; 4.8.54</li> <li>jsass 5.10.2 -&gt; 5.10.3</li> <li>undertow-core 2.0.27.Final -&gt; 2.0.28.Final</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5110","title":"Version 5.11.0","text":"<p>Released at 24.10.2019</p> <ul> <li>Updated AdminLTE3 to latest version (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>cactoos-matcher 0.17 -&gt; 0.18</li> <li>jsass 5.9.2 -&gt; 5.10.2</li> <li>bouncycastle 1.63 -&gt; 1.64</li> <li>undertow-core 2.0.26.Final -&gt; 2.0.27.Final</li> <li>classgraph 4.8.47 -&gt; 4.8.52</li> <li>hamcrest 2.2-rc1 -&gt; 2.2</li> <li>greenmail 1.5.10 -&gt; 1.5.11</li> <li>quartz 2.3.1 -&gt; 2.3.2</li> <li>plexus-components 2.0.0 -&gt; 2.1.0</li> <li>jose4j 0.6.5 -&gt; 0.7.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-5101","title":"Version 5.10.1","text":"<p>Released at 12.09.2019</p> <ul> <li>Bumped BeanUtils version to 1.9.4 to fix CVE-2019-10086 (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-5100","title":"Version 5.10.0","text":"<p>Released at 12.09.2019</p> <ul> <li>#431 Added CORS handler (svenkubiak)</li> <li>Upgraded Admin Dashboard to latest AdminLTE version</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.24.Final -&gt; 2.0.26.Final</li> <li>classgraph 4.8.44 -&gt; 4.8.47</li> <li>freemarker 2.8.23 -&gt; 2.8.24</li> <li>guava 28.0-jre -&gt; 28.1-jre</li> <li>awaitility 4.0.0-rc1 -&gt; 4.0.1</li> <li>juniper 5.5.1 -&gt; 5.5.2</li> <li>juniper-platform 1.5.1 -&gt; 1.5.2</li> <li>httpmime 4.5.9 -&gt; 4.5.10</li> <li>bouncycastle 1.62 -&gt; 1.63</li> <li>jersey 2.29 -&gt; 2.29.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-590","title":"Version 5.9.0","text":"<p>Released at 15.08.2019</p> <ul> <li>Fixed async mail sending (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>Junit 5.5.0 -&gt; 5.5.1</li> <li>Junit Platform 1.5.0 -&gt; 1.5.1</li> <li>Jackson-Databin 2.9.9.1 -&gt; 2.9.9.2</li> <li>ehcache-clustered 3.7.1 -&gt; 3.8.0</li> <li>jackson-databind 2.9.9.2 - 2.9.9.3</li> <li>log4j 2.12.0 -&gt; 2.12.1</li> <li>undertow-core 2.0.22.Final -&gt; 2.0.24.Final</li> <li>classgraph 4.8.43 -&gt; 4.8.44</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-581","title":"Version 5.8.1","text":"<p>Released at 02.08.2019</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>Junit 5.5.0 -&gt; 5.5.1</li> <li>Junit Platform 1.5.0 -&gt; 1.5.1</li> <li>Jackson-Databin 2.9.9.1 -&gt; 2.9.9.2</li> <li>ehcache-clustered 3.7.1 -&gt; 3.8.0</li> <li>undertow-core 2.0.22.Final -&gt; 2.0.23.Final</li> <li>Sonar refactorings</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-580","title":"Version 5.8.0","text":"<p>Released at 18.07.2019</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.21.Final -&gt; 2.0.22.Final</li> <li>classgraph 4.8.40 -&gt; 4.8.41</li> <li>jsass 5.8.0 -&gt; 5.9.1</li> <li>log4j 2.11.2 -&gt; 2.12.0</li> <li>Jersey 2.28 -&gt; 2.29</li> <li>Junit 5.5.0-RC1 -&gt; 5.5.0</li> <li>Junit Platform 1.5.0-RC1 -&gt; 1.5.0</li> <li>Jodd-Mail 5.0.13 -&gt; 5.1.0</li> <li>Jodd-Props 5.0.13 -&gt; 5.1.0</li> <li>JCasbin 1.3.0 -&gt; 1.4.0</li> <li>Jackson-Databind 2.9.9 -&gt; 2.9.9.1</li> <li>Cactoos 0.41 -&gt; 0.42</li> <li>Classgraph 5.9.1 -&gt; 5.9.2</li> <li>zt-exec 1.10 -&gt; 1.11</li> <li>mockito-core 2.28.2 -&gt; 3.0.0</li> <li>plexus-utils 3.2.0 -&gt; 3.2.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-570","title":"Version 5.7.0","text":"<p>Released at 15.06.2019</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.20.Final -&gt; 2.0.21.Final</li> <li>mockito-core 2.27.0 -&gt; 2.28.2</li> <li>cactoos-matcher 0.15 -&gt; 0.17</li> <li>classgraph 4.8.37 -&gt; 4.8.40</li> <li>bcprov-jdk15on 1.61 -&gt; 1.62</li> <li>junit-platform 1.5.0-M1 -&gt; 1.5.0-RC1</li> <li>junit-jupiter 5.5.0-M1 -&gt; 5.5.0-RC1</li> <li>httpmime 4.5.8 -&gt; 4.5.9</li> <li>guava 27.1-jre -&gt; 28.0-jre</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-560","title":"Version 5.6.0","text":"<p>Release at 24.05.2019</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.8.24 -&gt; 4.8.35</li> <li>cactoos 0.40 -&gt; 0.41</li> <li>cactoos-matcher 0.14 -&gt; 0.15</li> <li>jcasbin 1.20 -&gt; 1.30</li> <li>jodd-mail 5.0.12 -&gt; 5.0.13</li> <li>jodd-props 5.0.12 -&gt; 5.0.13</li> <li>jackson-databind 2.9.8 -&gt; 2.9.9</li> <li>zxing 3.3.3 -&gt; 3.4.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-550","title":"Version 5.5.0","text":"<p>Released at 17.04.2019</p> <ul> <li>MinRequestTime in Metrics is now counted only if MinRequestTime &gt; 0 (svenkubiak)</li> <li>Bumped to latest version of Bootstrap and jQuery in Admin interface (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.19.Final -&gt; 2.0.20.Final</li> <li>junit-juniper 5.4.0 -&gt; 5.4.1</li> <li>junit-platform 1.4.0 -&gt; 1.4.1</li> <li>mockito-core 2.25.0 -&gt; 2.27.0</li> <li>classgraph 4.8.14 -&gt; 4.8.24</li> <li>greenmail 1.5.9 -&gt; 1.5.10</li> <li>c3p0 0.9.5.3 -&gt; 0.9.5.4</li> <li>maven 3.6.0 -&gt; 3.6.1</li> <li>quartz 2.3.0 -&gt; 2.3.1</li> <li>jsass 5.7.4 -&gt; 5.8.0</li> <li>httpmime 4.5.7 -&gt; 4.5.8</li> <li>jodd-props 5.0.10 -&gt; 5.0.12</li> <li>jodd-mail 5.0.10 -&gt; 5.0.12</li> <li>ehcache-clustered 3.7.0 -&gt; 3.7.1</li> <li>commons-lang3 3.8.1 -&gt; 3.9</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-540","title":"Version 5.4.0","text":"<p>Released at 11.03.2019</p> <ul> <li>#415 Fixed incorrect styling of error page in dev mode (svenkubiak)</li> <li>#414 Fixed bug that calculated the error rate metric incorrectly (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.17.Final -&gt; 2.0.19.Final</li> <li>log4j 2.11.1 -&gt; 2.11.2</li> <li>bcprov-jdk15on 1.60 -&gt; 1.61</li> <li>cactoos-matchers 0.13 -&gt; 0.14</li> <li>cactoos 0.39 -&gt; 0.40</li> <li>jodd-props 5.0.6 -&gt; 5.0.10</li> <li>jodd-mail 5.0.6 -&gt; 5.0.10</li> <li>junit-jupiter 5.4.0-RC2 -&gt; 5.4.0</li> <li>junit-platform 1.4.0-RC2 -&gt; 1.4.0</li> <li>classgraph 4.6.13 -&gt; 4.8.14</li> <li>mockito-core 2.24.0 -&gt; 2.25.0</li> <li>jsass 5.7.3 -&gt; 5.7.4</li> <li>guava 27.0.1-jre -&gt; 27.1-jre</li> <li>plexus-utils 3.1.1 -&gt; 3.2.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-530","title":"Version 5.3.0","text":"<p>Released at 05.02.2018</p> <ul> <li>#409 Added optional 2FA for admin area, controller and request routes (svenkubiak)</li> <li>Temporal fix f\u00fcr CVE-2018-20433 until Quartz library gets updated (svenkubiak)</li> <li>Fixed a bug in TotpUtils that returned an incorrect 2FA QR Code (svenkubiak)</li> <li>Increased startup time of maven plugin by around 15% (svenkubiak)</li> <li>JDPA Debug in maven plugin is now disabled by default (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.6.13 -&gt; 4.6.32</li> <li>undertow 2.0.16.Final -&gt; 2.0.17.Final</li> <li>jose4j 0.6.4 -&gt; 0.6.5</li> <li>cactoos-matchers 0.12 -&gt; 0.13</li> <li>cactoos 0.38 -&gt; 0.39</li> <li>httpmime 4.5.6 -&gt; 4.5.7</li> <li>awaitility 3.1.5 -&gt; 3.1.6</li> <li>plexus-component-annotations 1.7.1 -&gt; 2.0.0</li> <li>jcasbin 1.1.0 -&gt; 1.2.0</li> <li>mockito-core 2.23.4 -&gt; 2.24.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-520","title":"Version 5.2.0","text":"<p>Released at 14.01.2019</p> <ul> <li>#404 Upgraded LessCSS Compiler to 2.0.0 (agabrys)</li> <li>Changed handling of additional Security headers (svenkubiak)</li> <li>Changed handling of assets in admin interface (svenkubiak)</li> <li>Added Feature-Policy header (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>classgraph 4.6.8 -&gt; 4.6.13</li> <li>plexus-utils 3.1.0 -&gt; 3.1.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-510","title":"Version 5.1.0","text":"<p>Released at 16.12.2018</p> <ul> <li>#401 Added method in Response class for sending unrendered body content (svenkubiak)</li> <li>Fixed NPE when using JS/CSS minification in development mode</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.15.Final -&gt; 2.0.16.Final</li> <li>junit 5.3.1 -&gt; 5.3.2</li> <li>junit-platform 1.3.1 -&gt; 1.3.2</li> <li>greenmail 1.5.8 -&gt; 1.5.9</li> <li>cactoos-matcher 0.11 -&gt; 0.12</li> <li>classgraph 4.6.1 -&gt; 4.6.10</li> <li>awaitility 3.1.3 -&gt; 3.1.5</li> <li>jackson 2.9.7 -&gt; 2.9.8</li> <li>plexus-utils 3.1.0 -&gt; 3.1.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-501","title":"Version 5.0.1","text":"<p>Released at 03.12.2018</p> <ul> <li>Fixed bug that displayed the state of a job incorrectly in the admin interface (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-500","title":"Version 5.0.0","text":"<p>Released at 26.11.2018</p> <ul> <li>#393 Refactored HTTP test classes to JDK9 introduced java.net.http (svenkubiak)</li> <li>#392 Added EventBus metrics to admin area (svenkubiak)</li> <li>#391 New programmatically routing system (svenkubiak)</li> <li>#390 Added jCasbin as authorization provider (svenkubiak)</li> <li>#388 Removed X-Response-Time header (svenkubiak)</li> <li>#385 Removed cooke versioning (svenkubiak)</li> <li>#384 Cleanup of Log4j2 integration (svenkubiak)</li> <li>#367 Migrated admin area to Admin LTE 3 (svenkubiak)</li> <li>#361 Switched to Jodd Props for configuration handling (svenkubiak)</li> <li>#351 Moved RequestHelper to RequestUtils (svenkubiak)</li> <li>#336 Cleanup of Freemarker integration (svenkubiak)</li> <li>#293 Removed ambiguous CLI args (svenkubiak)</li> <li>#283 Migrated to JUnit 5 (svenkubiak)</li> <li>#273 Removed all deprecated methods and classes (svenkubiak)</li> <li>Added public/private key handling for encrypted configuration values (svenkubiak)</li> <li>Removed FluentLenium integration in test project (svenkubiak)</li> <li>Removed ETag for dynamic content (svenkubiak)</li> <li>Removed OAuth Filters and Libraries (svenkubiak)</li> <li>Removed benchmark and examples projects (svenkubiak)</li> <li>Support and require Java 11 (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>ehcache 3.6.1 -&gt; 3.6.2</li> <li>junit 4.12 -&gt; 5.3.1</li> <li>awaitility 3.1.2 -&gt; 3.1.3</li> <li>guava 27.0-jre -&gt; 27.0.1-jre</li> <li>mockito-core 2.23.0 -&gt; 2.23.4</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4180","title":"Version 4.18.0","text":"<p>Released at 05.11.2018</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.13-Final -&gt; 2.0.15-Final</li> <li>guice 4.2.1 -&gt; 4.2.2</li> <li>freemarker-java8 1.2.0 -&gt; 1.3.0</li> <li>classgraph 4.2.12 -&gt; 4.4.12</li> <li>selenium-java 3.14.0 -&gt; 3.141.0</li> <li>htmlunit-driver 2.33.0 -&gt; 2.33.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4170","title":"Version 4.17.0","text":"<p>Released at 12.10.2018</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>jackson-databind 2.9.6 -&gt; 2.9.7</li> <li>classgraph 4.1.5 -&gt; 4.2.12</li> <li>commongs-lang 3.8 -&gt; 3.8.1</li> <li>ehcache-clustered 3.6.0 -&gt; 3.6.1</li> <li>fluentlenium 3.6.1 -&gt; 3.7.0</li> <li>mockito-core 2.21.0 -&gt; 2.22.0</li> <li>guice 4.2.0 -&gt; 4.2.1</li> <li>dsiutils 2.5.1 -&gt; 2.5.2</li> <li>cactoos 0.36 -&gt; 0.38</li> <li>jodd-mail 5.0.4 -&gt; 5.0.5</li> <li>scribe-java 5.5.0 -&gt; 6.0.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4160","title":"Version 4.16.0","text":"<p>Released at 03.09.2018</p> <ul> <li>#380 Fixed invalidation of session cookie due to wrong path (wildunne)</li> <li>#379 Support of inheritence of controller methods (wildunne)</li> <li>#378 Migrated from fast-classpath-scanner to classgraph (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>htmlunit 2.32.0 -&gt; 2.32.1</li> <li>mockito-core 2.20.1 -&gt; 2.21.0</li> <li>undertow-core 2.0.11-Final -&gt; 2.0.13-Final</li> <li>jodd-mail 5.0.3 -&gt; 5.0.4</li> <li>greenmail 1.5.7 -&gt; 1.5.8</li> <li>ehcache-clustered 3.5.2 -&gt; 3.6.0</li> <li>fast-classpath-scanner -&gt; classgraph 4.1.5</li> <li>commons-lang3 3.7 -&gt; 3.8</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4150","title":"Version 4.15.0","text":"<p>Released at 30.07.2015</p> <ul> <li>#374 Pass messages from attachment to controller (wildunne)</li> <li>#371 Provide a charset for the template based emails (wildunne)</li> <li>Version bumps (svenkubiak)<ul> <li>cactoo 0.35 -&gt; 0.36</li> <li>fluentlenium 3.6.0 -&gt; 3.6.1</li> <li>bouncycastle 1.59 &gt; 1.60</li> <li>fast-classpath-scanner 3.1.6 -&gt; 3.1.12</li> <li>http-components 4.5.5 -&gt; 4.5.6</li> <li>undertow-core 2.0.9-Final -&gt; 2.0.11-Final</li> <li>jodd-mail 5.0.2 -&gt; 5.0.3</li> <li>jose4j 0.6.3 -&gt; 0.6.4</li> <li>mockito-core 2.19.0 -&gt; 2.20.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4140","title":"Version 4.14.0","text":"<p>Released at 01.07.2018</p> <ul> <li>#357 Refactored MinificationUtils (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.7-Final -&gt; 2.0.9-Final</li> <li>prettytime 4.0.1.Final -&gt; 4.0.2.Final</li> <li>scribe-java 5.4.0 -&gt; 5.5.0</li> <li>cactoo-matchers 0.9.1 -&gt; 0.11</li> <li>zxing 3.3.2 -&gt; 3.3.3</li> <li>cactoo 0.33 -&gt; 0.35</li> <li>jackson 2.9.5 -&gt; 2.9.6</li> <li>jodd-mail 4.3.2 -&gt; 5.0.2</li> <li>fast-classpath-scanner 2.20.0 -&gt; 3.1.6</li> <li>mockito-core 2.18.3 -&gt; 2.19.0</li> <li>fluentlenium 3.5.2 -&gt; 3.6.0</li> <li>selenium-java 3.12.0 -&gt; 3.13.0</li> <li>awaitility 3.1.0 -&gt; 3.1.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4130","title":"Version 4.13.0","text":"<p>Released at 18.05.2018</p> <ul> <li>#363 Keys are now enforced to at least 512 Bit and validated on startup (svenkubiak)</li> <li>#360 Switched from commons-email to jodd-email (svenkubiak)</li> <li>#358 Refactored and increased cookie handling and security (svenkubiak)</li> <li>Fixed concurrency bug in DispatcherHandler (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.4.Final -&gt; 2.0.7.Final</li> <li>htmlunit-driver 2.29.0 -&gt; 2.31.0</li> <li>fast-classpath-scanner 2.18.1 -&gt; 2.20.0</li> <li>scribe-java 5.3.0 -&gt; 5.4.0</li> <li>jsass 5.7.0 -&gt; 5.7.3</li> <li>mockito-core 2.18.0 -&gt; 2.18.3</li> <li>cactoo 0.30.0 -&gt; 0.33.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4120","title":"Version 4.12.0","text":"<p>Released at 14.04.2018</p> <ul> <li>#353 Fixed issue with Admin interface navigation in responsive view (svenkubiak)</li> <li>#352 Fixed issue with JWTS Sign key length (svenkubiak)</li> <li>#350 Added support for Same Site Cookie Attribute (svenkubiak)</li> <li>#343 Added groovy script to auto generate keys in archetype generation (svenkubiak)</li> <li>Improved sanity checks (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.0.1.Final -&gt; 2.0.4.Final</li> <li>ehcache-clustered 3.5.0 -&gt; 3.5.2</li> <li>log4j 2.10.0 -&gt; 2.11.0</li> <li>jackson-databind 2.9.4 -&gt; 2.9.5</li> <li>mockito-core 2.16.0 -&gt; 2.18.0</li> <li>jsass 5.5.6 -&gt; 5.7.0</li> <li>freemarker 2.3.27-incubation -&gt; 2.3.28</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4110","title":"Version 4.11.0","text":"<p>Released at 15.03.2018</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow 1.4.22.Final -&gt; 2.0.1.Final</li> <li>fast-classpath-scanner 2.12.0 -&gt; 2.18.0</li> <li>selenium-java 3.8.1 -&gt; 3.11.0</li> <li>htmlunit-driver 2.29.0 -&gt; 2.29.3</li> <li>jsass 5.5.5 -&gt; 5.5.6</li> <li>fluentlenium 3.4.1 -&gt; 3.5.3</li> <li>greenmail 1.5.6 -&gt; 1.5.7</li> <li>mockito-core 2.13.0 -&gt; 2.16.0</li> <li>governator 1.17.4 -&gt; 1.17.5</li> <li>ehcache-clustered 3.4.0 -&gt; 3.5.0</li> <li>guice 4.1.0 -&gt; 4.2.0</li> <li>awaitility 3.0.0 -&gt; 3.1.0</li> <li>scribe-java 5.2.0-java7again -&gt; 5.3.0</li> <li>maven-core 3.5.2 -&gt; 3.5.3</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-4100","title":"Version 4.10.0","text":"<p>Released at 31.01.2018</p> <ul> <li>#344 Added multikey encryption/decryption for config values (svenkubiak)</li> <li>#342 Session and Authentication cookie now use separate sign and encryption keys (svenkubiak)</li> <li>Updated AdminLTE and additional CSS/JS to latest version (svenkubiak)</li> <li>Added RandomString method to CryptoUtils (svenkubiak)</li> <li>Added additional validators (svenkubiak)</li> <li>Sanity checks are now also display in @admin interface (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.21.Final -&gt; 1.4.22.Final</li> <li>httpmime 4.5.4 -&gt; 4.5.5</li> <li>bcprov-jdk15on 1.58 -&gt; 1.59</li> <li>fast-classpath-scanner 2.9.3 -&gt; 2.12.0</li> <li>htmlunit-driver 2.28.4 -&gt; 2.29.0</li> <li>jackson-databind 2.9.3 -&gt; 2.9.4</li> <li>scribe-java 5.0.0 -&gt; 5.2.0</li> <li>jsass 5.5.4 -&gt; 5.5.5</li> <li>zxing 3.3.1 -&gt; 3.3.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-490","title":"Version 4.9.0","text":"<p>Released at 21.12.2017</p> <ul> <li>Added option to enable metrics independently of @admin interface (svenkubiak)</li> <li>Metrics now count all requests (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>htmlunit-driver 2.28 -&gt; 2.28.4</li> <li>jsass 5.5.3 -&gt; 5.5.4</li> <li>scribe-java 4.2.0 -&gt; 5.0.0</li> <li>log4j 2.9.1 -&gt; 2.10.0</li> <li>greenmail 1.5.5 -&gt; 1.5.6</li> <li>httpmime 4.5.3 -&gt; 4.5.4</li> <li>selenium-java 3.7.1 -&gt; 3.8.1</li> <li>mockito-core 2.12.0 -&gt; 2.13.0</li> <li>jackson-databind 2.9.2 -&gt; 2.9.3</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-480","title":"Version 4.8.0","text":"<p>Release at 17.11.2017</p> <ul> <li>#332 Added option to reset Metrics (svenkubiak)</li> <li>#328 Added REST/JSON call to @admin pages (svenkubiak)</li> <li>#327 Added sanity checks to application startup (svenkubiak)</li> <li>Repleaced LESS4j with new LESS compiler due to outdated dependencies (with CVEs) in LESS4j (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>commons-lang3 3.6 -&gt; 3.7</li> <li>undertow-core 1.4.20.Final -&gt; 1.4.21.Final</li> <li>fast-classpath-scanner 2.8.0 -&gt; 2.9.3</li> <li>freemarker 2.3.26-incubating -&gt; 2.3.27-incubating</li> <li>selenium-java 3.6.0 -&gt; 3.7.1</li> <li>mockito-core 2.11.0 -&gt; 2.12.0</li> <li>htmlunit-driver 2.27 -&gt; 2.28</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-472","title":"Version 4.7.2","text":"<p>Released at 05.11.2017</p> <ul> <li>Fixed bug that did not load env specific Log4J2 configuration (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-471","title":"Version 4.7.1","text":"<p>Released at 01.11.2017</p> <ul> <li>#329 Fixed bug with custom appenders and Log4J2 configuration (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-470","title":"Version 4.7.0","text":"<p>Released at 25.10.2017</p> <ul> <li>Added additional Unit tests (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>jackson-databind 2.9.0.pr4 -&gt; 2.9.2</li> <li>mockito-core 2.9.0 -&gt; 2.11.0</li> <li>log4j 2.9.0 -&gt; 2.9.1</li> <li>fast-classpath-scanner 2.4.7 -&gt; 2.8.0</li> <li>jjwt 0.7.0 -&gt; 0.8.0</li> <li>fluentlenium 3.3.0 -&gt; 3.4.1</li> <li>junit-toolbox 2.3 -&gt; 2.4</li> <li>dsiutils 2.4.0 -&gt; 2.4.2</li> <li>commons-io 2.5 -&gt; 2.6</li> <li>maven-core 3.5.0 -&gt; 3.5.2</li> <li>zxing 3.3.0 -&gt; 3.3.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-460","title":"Version 4.6.0","text":"<p>Released at 05.09.2017</p> <ul> <li>#314 Added examples project (svenkubiak)</li> <li>#313 Enhanced rate limit handling (svenkubiak)</li> <li>#312 Refactored TOTP support (svenkubiak)</li> <li>#304 Cleanup of dependencies (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow 1.4.18.Final -&gt; 1.4.20.Final</li> <li>ehcache-clsutered 3.3.1 -&gt; 3.4.0</li> <li>scribe-java 4.1.2 -&gt; 4.2.0</li> <li>jsass 5.5.2 -&gt; 5.5.3</li> <li>fluentlenium 3.2.0 -&gt; 3.3.0</li> <li>fast-classpath-scanner 2.4.2 -&gt; 2.4.7</li> <li>commons-email 1.4 -&gt; 1.5</li> <li>zt-exec 1.9 -&gt; 1.10</li> <li>bcprov-jdk15on 1.57 -&gt; 1.58</li> <li>freemarker-java8 1.1.5 -&gt; 1.2.0</li> <li>log4j 2.8.2 -&gt; 2.9.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-450","title":"Version 4.5.0","text":"<p>Released at 10.07.2017</p> <ul> <li>#309 Added EventBus (svenkubiak)</li> <li>#308 Upgraded AdminLTE for Admin pages (svenkubiak)</li> <li>#302 Added Governator for Google Guice enhancements (svenkubiak)</li> <li>Removed unused CSS and JS files in archetype (svenkubiak)</li> <li>Refactored internal enums (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow 1.4.13.Final -&gt; 1.4.18.Final</li> <li>jsass 5.5.0 -&gt; 5.5.2</li> <li>fast-classpath-scanner 2.0.19 -&gt; 2.4.2</li> <li>greenmail 1.5.4 -&gt; 1.5.5</li> <li>bcprov-jdk15on 1.56 -&gt; 1.57</li> <li>scribe-java 4.1.0 -&gt; 4.1.2</li> <li>mockito-core 2.7.22 -&gt; 2.8.47</li> <li>guava 21.0 -&gt; 22.0</li> <li>json-path 2.2.0 -&gt; 2.4.0</li> <li>dsiutils 2.3.6 -&gt; 2.4.0</li> <li>scribe-java 4.1.1 -&gt; 4.1.2</li> <li>governator 1.17.2 -&gt; 1.17.4</li> <li>htmlunit-driver 2.26 -&gt; 2.27</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-441","title":"Version 4.4.1","text":"<p>Released at 19.05.2017</p> <ul> <li>Fixed bug in archetype generation (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-440","title":"Version 4.4.0","text":"<p>Released at 02.05.2017</p> <ul> <li>#300 Neccassary refactorings of Utility classes to avoid concurrency issues (svenkubiak)</li> <li>#297 Enhanced Admin Routes page (svenkubiak)</li> <li>#296 Added option to pass parameter as Optional (svenkubiak)</li> <li>#295 Added PATCH method (svenkubiak)</li> <li>#291 Added option to pass config values as JVM argument (svenkubiak)</li> <li>Added new admin page for on-the-fly logger configuration (svenkubiak)</li> <li>Added option to pass masterkey as JVM argument (svenkubiak)</li> <li>Set default charset for sending emails to UTF-8 (svenkubiak)</li> <li>Removed JVM properties from admin dashboard and replaced it with memory information (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow 1.4.11.Final -&gt; 1.4.13.Final</li> <li>ehcache-clustered 3.3.0 -&gt; 3.3.1</li> <li>scribejava-apis 4.0.0 -&gt; 4.1.0</li> <li>scribejava-core 4.0.0 -&gt; 4.1.0</li> <li>mockito-core 2.7.20 -&gt; 2.7.22</li> <li>htmlunit-driver 2.25 -&gt; 2.26</li> <li>junit-toolbox 2.2 -&gt; 2.3</li> <li>maven-core 3.3.9 -&gt; 3.5.0</li> <li>fluentlenium-assertj 3.1.1 -&gt; 3.2.0</li> <li>fluentlenium-junit 3.1.1 -&gt; 3.2.0</li> <li>log4j 2.8.1 -&gt; 2.8.2</li> <li>jackson-databind 2.8.7 -&gt; 2.8.8</li> <li>fast-classpath-scanner 2.0.18 -&gt; 2.0.19</li> <li>greenmail 1.5.3 -&gt; 1.5.4</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-433","title":"Version 4.3.3","text":"<p>Released at 21.04.2017</p> <ul> <li>Fixed concurrency issue in JSON serializer (svenkubiak, gowthaman-basuvaraj)</li> </ul>"},{"location":"changelog-archived/#version-432","title":"Version 4.3.2","text":"<p>Released at 10.04.2017</p> <ul> <li>Fixed bug that resulted in not decrypting all encrypted config values in some cases (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-431","title":"Version 4.3.1","text":"<p>Released at 07.04.2017</p> <ul> <li>#284 Fixed NPE in CookieParser (svenkubiak)</li> <li>#282 Fixed failing decryption of encrypted config values (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-430","title":"Version 4.3.0","text":"<p>Released at 31.03.2017</p> <ul> <li>#276 Added OPTIONS HTTP method (svenkubiak)</li> <li>#272 Added TwoFactorAuthentication flow into Authentication class (svenkubiak)</li> <li>#271 Added JVM options for setting HTTP/AJP host and port (svenkubiak)</li> <li>#269 Added option for reverse routing in templates (svenkubiak)</li> <li>Fixed bug that generated incorrect QR-Code for TwoFactorAuthentication (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mockito-core 2.7.13 -&gt; 2.7.20</li> <li>fast-classpath-scanner 2.0.17 -&gt; 2.0.18</li> <li>freemarker 2.3.25-incubating -&gt; 2.3.26-incubating</li> <li>jsass 5.4.3 -&gt; 5.5.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-421","title":"Version 4.2.1","text":"<p>Released at 13.03.2017</p> <ul> <li>#264 Fixed bug when controllers where located in sub-package (svenkubiak)</li> <li>#267 Fixed/Refactored not working location attribute (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-420","title":"Version 4.2.0","text":"<p>Released at 03.03.2017</p> <ul> <li>#259 Added additional methods for 2FA in Authentication class (svenkubiak)</li> <li>#256 Added handling of multivalue form fields (svenkubiak)</li> <li>#255 Fixed wrong spelling in validation messages (wildunne)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.10.Final -&gt; 1.4.11.Final</li> <li>log4j 2.8 -&gt; 2.8.1</li> <li>mockito-core 2.7.3 -&gt; 2.7.13</li> <li>ehcache-clustered 3.2.0 -&gt; 3.3.0</li> <li>fast-classpath-scanner 2.0.13 -&gt; 2.0.17</li> <li>dsiutils 2.3.3 -&gt; 2.3.6</li> <li>jackson-databind 2.8.6 -&gt; 2.8.7</li> <li>jackson-dataformat-yaml 2.8.6 -&gt; 2.8.7</li> <li>commons-validator 1.5.1 -&gt; 1.6</li> <li>htmlunit-driver 2.24 -&gt; 2.25</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-411","title":"Version 4.1.1","text":"<p>Released at 27.02.2017</p> <ul> <li>Fixed NPE when request parameter is missing (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-410","title":"Version 4.1.0","text":"<p>Released at 06.02.2017</p> <ul> <li>#250 Added support for Java 8 in Freemarker (svenkubiak)</li> <li>#249 Introduced prettytime in Freemarker template (svenkubiak)</li> <li>#247 Checked and verified HTTP security header (svenkubiak)</li> <li>#244 Enhanced scheduler (svenkubiak)</li> <li>#241 Added location attribute (svenkubiak)</li> <li>#238 Updated version in archetype (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.7.Final -&gt; 1.4.10.Final</li> <li>log4j 2.7 -&gt; 2.8</li> <li>jsass 5.4.0 -&gt; 5.4.3</li> <li>mockito-core 2.7.0 -&gt; 2.7.3</li> <li>fast-classpath-scanner 2.0.9 -&gt; 2.0.13</li> <li>websocket-api 9.4.0.v20161208 -&gt; 9.4.1.v20170120</li> <li>websocket-client 9.4.0.v20161208 -&gt; 9.4.1.v20170120</li> <li>jackson-databind 2.8.5 -&gt; 2.8.6</li> <li>jackson-dataformat-yaml 2.8.5 -&gt; 2.8.6</li> <li>scribejava-apis 3.4.1 -&gt; 4.0.0</li> <li>scribejava-core 3.4.1 -&gt; 4.0.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-400","title":"Version 4.0.0","text":"<p>Released at 30.12.2016</p> <ul> <li>#236 Form enhancement (svenkubiak)</li> <li>#235 Cache enhancement (MarkVink)</li> <li>#205 Added shutdown of ExecutionService (svenkubiak)</li> <li>#204 Added authentication per request (svenkubiak)</li> <li>#203 Switch Session, Auth, Flash cookie to Json Web Token (svenkubiak)</li> <li>#191 Added limit login attemps (svenkubiak)</li> <li>#191 Added request throtteling (svenkubiak)</li> <li>#180 Added new enhanced routing (svenkubiak)</li> <li>#179 Added additional AJP connector (svenkubiak)</li> <li>#178 Added application shutdown method to lifecycle (svenkubiak)</li> <li>#173 Admin UI is now using JBCrypt for password hashing (svenkubiak)</li> <li>#175 AES256 is now enforced (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.3.Final -&gt; 1.4.7.Final</li> <li>jersey-media-sse 2.23.2 -&gt; 2.25</li> <li>jsass 5.3.0 -&gt; 5.3.1</li> <li>mockito-core 2.2.9 -&gt; 2.7.0</li> <li>ehcache-clustered 3.1.3 -&gt; 3.2.0</li> <li>fast-classpath-scanner 2.0.6 -&gt; 2.0.9</li> <li>websocket-api 9.3.13.v20161014 -&gt; 9.4.0.v20161208</li> <li>websocket-client 9.3.13.v20161014 -&gt; 9.4.0.v20161208</li> <li>bcprov-jdk15on 1.5.5 -&gt; 1.5.6</li> <li>jackson-databind 2.8.4 -&gt; 2.8.5</li> <li>jackson-dataformat-yaml 2.8.4 -&gt; 2.8.5</li> <li>fluentlenium-assertj 3.0.3 -&gt; 3.1.0</li> <li>fluentlenium-junit 3.0.3 -&gt; 3.1.0</li> <li>scribejava-apis 3.2.0 -&gt; 3.4.1</li> <li>scribejava-core 3.2.0 -&gt; 3.4.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-3120","title":"Version 3.12.0","text":"<p>Released at 21.04.2017</p> <ul> <li>Fixed concurrency issue in JSON serializer</li> <li>Version bumps (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-3110","title":"Version 3.11.0","text":"<p>Released at 06.02.2017</p> <ul> <li>Version bumps (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-3100","title":"Version 3.10.0","text":"<p>Released at 15.12.2016</p> <ul> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.7.Final -&gt; 1.4.8.Final</li> <li>guava 20.0 -&gt; 21.0</li> <li>greenmail 1.5.2 -&gt; 1.5.3</li> <li>jackson-databind 2.8.5 -&gt; 2.8.6</li> <li>jackson-dataformat-yaml 2.8.5 -&gt; 2.8.6</li> <li>fleunt-hc 4.5.2 -&gt; 4.5.3</li> <li>jsass 5.4.0 -&gt; 5.4.3</li> <li>fast-classpath-scanner 2.0.9 -&gt; 2.0.13</li> <li>websocket-client 9.3.12.v20160915 -&gt; 9.4.1.v20170120</li> <li>hazelcast-client 3.7.2 -&gt; 3.7.5</li> <li>log4j-api 2.7 -&gt; 2.8</li> <li>log4j-core 2.7 -&gt; 2.8</li> <li>log4j-slf4j-impl 2.7 -&gt; 2.8</li> <li>mockito-core 2.3.4 -&gt; 2.7.0</li> <li>bcprov-jdk15on 1.55 -&gt; 1.56</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-390","title":"Version 3.9.0","text":"<p>Released at 26.10.2016</p> <ul> <li>#230 Added option to pass JVM args (gowthaman-basuvaraj)</li> <li>#222 Added debugger mode to mvn:mangooio run (gowthaman-basuvaraj)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>pebble 2.2.2 -&gt; 2.2.3</li> <li>htmlunit-driver 2.21-&gt; 2.23</li> <li>jackson-databind 2.8.3 -&gt; 2.8.4</li> <li>jackson-dataformat-yaml 2.8.3 -&gt; 2.8.4</li> <li>hazelcast-client 3.7.1 -&gt; 3.7.2</li> <li>fast-classpath-scanner 2.0.3 -&gt; 2.0.5</li> <li>commons-lang3 3.4 -&gt; 3.5</li> <li>websocket-client 9.3.12.v20160915 -&gt; 9.3.13.v20161014</li> <li>log4j-api 2.6.2 -&gt; 2.7</li> <li>log4j-core 2.6.2 -&gt; 2.7</li> <li>log4j-slf4j-impl 2.6.2 -&gt; 2.7</li> <li>mockito-core 2.1.0-RC.2 -&gt; 2.2.9</li> <li>htmlunit-driver 2.23 -&gt; 2.23.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-381","title":"Version 3.8.1","text":"<p>Released at 19.10.2016</p> <ul> <li>#227 Response.andContentType now sets the header accordingly (svenkubiak)</li> <li>Crypto key now only accepts ASCII characters (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-380","title":"Version 3.8.0","text":"<p>Released at 30.09.2016</p> <ul> <li>#215 Fixed StaticLogger warning on startup (svenkubiak)</li> <li>#216 Make headers configurable (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.4.0-Final -&gt; 1.4.3.Final</li> <li>hazelcast-client 3.7 -&gt; 3.7.1</li> <li>jackson-databind 2.8.2 -&gt; 2.8.3</li> <li>jackson-dataformat-yaml 2.8.2 -&gt; 2.8.3</li> <li>mockito-core 2.0.111-beta -&gt; 2.1.0-RC.2</li> <li>jetty-websocket 8.1.19.v20160209 -&gt; 8.2.0.v20160908</li> <li>websocket-client 9.3.11.v20160721 -&gt; 9.3.12.v20160915</li> <li>jsass 5.2.0 -&gt; 5.3.0</li> <li>greenmail 1.5.1 -&gt; 1.5.2</li> <li>scribejava-apis 3.1.0 -&gt; 3.2.0</li> <li>scribejava-core 3.1.0 -&gt; 3.2.0</li> <li>fast-classpath-scanner 2.0.1 -&gt; 2.0.3</li> <li>jjwt 0.6.0 -&gt; 0.7.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-371","title":"Version 3.7.1","text":"<p>Released at 05.09.2016</p> <ul> <li>Fixed missing log4j2.yaml file in archetype (svenkubiak)</li> <li>Fixed missing dependency when using fluentlenium (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-370","title":"Version 3.7.0","text":"<p>Released at 31.08.2016</p> <ul> <li>#210 Added new Admin UI tools page (svenkubiak)</li> <li>Fixed potential bug in i18n handling (svenkubiak)</li> <li>Switched from Reflections API to FastClasspathScanner (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>hazelcast-client 3.6.4 -&gt; 3.7</li> <li>jawr-core 3.8 -&gt; 3.9</li> <li>scribejava-apis 3.0.0 -&gt; 3.1.0</li> <li>scribejava-core 3.0.0 -&gt; 3.1.0</li> <li>bcprov-jdk15on 1.54 -&gt; 1.55</li> <li>fluentlenium-core 0.13.2 -&gt; 0.13.3</li> <li>htmlunit-driver 2.21 -&gt; 2.23</li> <li>mockito-core 2.0.106-beta -&gt; 2.0.111-beta</li> <li>jackson-databind 2.8.1 -&gt; 2.8.2</li> <li>jackson-dataformat-yaml 2.8.1 -&gt; 2.8.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-360","title":"Version 3.6.0","text":"<p>Released at 18.08.2016</p> <ul> <li>#201 Added support for Json Web Token (svenkubiak)</li> <li>Updated documentation (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.23.Final -&gt; 1.4.0.Final</li> <li>jersey-media-sse 2.23.1 -&gt; 2.23.2</li> <li>mockito-beta 2.0.89-beta -&gt; 2.0.106-beta</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-350","title":"Version 3.5.0","text":"<p>Released at 25.07.2016</p> <ul> <li>Fixed bug in maven archetype (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>scribejava-apis 2.8.1 -&gt; 3.0.0</li> <li>scribejava-core 2.8.1 -&gt; 3.0.0</li> <li>log4j-1.2-api 2.6.1 -&gt; 2.6.2</li> <li>log4j-api 2.6.1 -&gt; 2.6.2</li> <li>log4j-core 2.6.1 -&gt; 2.6.2</li> <li>greenmail 1.5.0 -&gt; 1.5.1</li> <li>boon-json 0.6.4 -&gt; 0.6.6</li> <li>mockito-beta 2.0.81-beta -&gt; 2.0.89-beta</li> <li>jackson-databind 2.8.0 -&gt; 2.8.1</li> <li>jackson-dataformat-yaml 2.8.0 -&gt; 2.8.1</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-340","title":"Version 3.4.0","text":"<p>Released at 07.07.2016</p> <ul> <li>#194 Changed scheduler UI page if no jobs are scheduled (svenkubiak)</li> <li>#193 Fixed footer in admin UI (svenkubiak)</li> <li>#184 Added confirmation dialogs to scheduler admin UI page (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li> <p>Version bumps (svenkubiak)</p> <ul> <li>scribejava-apis 2.7.3 -&gt; 2.8.1</li> <li>scribejava-core 2.7.3 -&gt; 2.8.1</li> <li>guice 4.0 -&gt; 4.1.0</li> <li>hazelcast-client 3.6.3 -&gt; 3.6.4</li> <li>pebble 2.2.1 -&gt; 2.2.2</li> <li> <p>boon-json 0.6.2 -&gt; 0.6.4</p> </li> <li> <p>freemarker 2.3.24-incubating -&gt; 2.3.25-incubating</p> </li> <li> <p>fluentlenium-core 0.13.0 -&gt; 0.13.1</p> </li> <li> <p>mockito-core 2.0.59-beta -&gt; 2.0.81-beta</p> </li> <li> <p>jackson-databind 2.7.5 -&gt; 2.8.0</p> </li> <li> <p>jackson-dataformat-yaml 2.7.5 -&gt;2.8.0</p> </li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-330","title":"Version 3.3.0","text":"<p>Released at 17.06.2016</p> <ul> <li>#183 Fixed bug in WebRequest HTTP utility (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.6 -&gt; 2.6.1</li> <li>jersey-media-sse 2.23 -&gt;2.23.1</li> <li>scribejava-apis 2.6.0 -&gt; 2.7.3</li> <li>scribejava-core 2.6.0 -&gt; 2.7.3</li> <li>mockito-core 2.0.54-beta -&gt; 2.0.59-beta</li> <li>jackson-databind 2.7.4 -&gt; 2.7.5</li> <li>jackson-dataformat-yaml 2.7.4 -&gt;2.7.5</li> <li>jsass 5.1.1 -&gt; 5.2.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-320","title":"Version 3.2.0","text":"<p>Released at 06.06.2016</p> <ul> <li>Fixed bug in Crypto class that could cause concurrency issues (svenkubiak)</li> <li>Fixed bug in TwoFactorUtils that could return wrong numbers (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.22.Final -&gt; 1.3.23.Final</li> <li>boon-json 0.6.1 -&gt; 0.6.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-311","title":"Version 3.1.1","text":"<p>Released at 06.06.2016</p> <ul> <li>Fixed bug in metrics \u2013 Listener now only tracks non Admin UI calls (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-310","title":"Version 3.1.0","text":"<p>Released at 02.06.2016</p> <ul> <li>#168 Added first step of enhanced metrics</li> <li>#167 Added option to start/stop scheduler jobs in admin UI</li> <li>#169 Re-added mailer with enhancements</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>jersey-media-sse 2.22.2 -&gt; 2.23</li> <li>hazelcast-client 3.6.2 -&gt; 3.6.3</li> <li>htmlunit-driver 2.2.0 -&gt; 2.2.1</li> <li>scribejava-core 2.5.2 -&gt; 2.6.0</li> <li>scribejava-apis 2.5.2 -&gt; 2.6.0</li> <li>log4j-api 2.5 -&gt; 2.6</li> <li>log4j-core 2.5 -&gt; 2.6</li> <li>mockito-core 2.0.53-beta -&gt; 2.0.54-beta</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-300","title":"Version 3.0.0","text":"<p>Released at 18.05.2016</p> <ul> <li>#104 Completely refactored Admin UI (svenkubiak)</li> <li>#165 Made test utilities part of the core (svenkubiak)</li> <li>#147 Big documentation update (svenkubiak)</li> <li>#85 Removed Gzip minification (svenkubiak)</li> <li>#82 Added new SASS and LESS compiler (svenkubiak)</li> <li>#164 Switched to log4j2 yaml based configuration (svenkubiak)</li> <li>#165 Renamed mangooio-test-utilities to mangooio-test (svenkubiak)</li> <li>#112 Removed all @deprecated functions and classes (svenkubiak)</li> <li>#111 Moved Authentication class to bindings package (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.21.Final -&gt; 1.3.22.Final</li> <li>scribejava-apis 2.5.2 -&gt; 2.5.3</li> <li>scribejava-core 2.5.2 -&gt; 2.5.3</li> <li>mockito 2.0.46-Beta -&gt; 2.0.53-Beta</li> <li>quartz 2.2.2 -&gt; 2.2.3</li> <li>boon-json 0.5.7 -&gt; 0.6.1</li> <li>commons-io 2.4 -&gt; 2.5</li> <li>commons-validator 1.5.0 -&gt; 1.5.1</li> <li>jackson-dataformat-yaml 2. 7.3 -&gt; 2.7.4</li> <li>jackson-databind 2.7.3 -&gt; 2.7.4</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-261","title":"Version 2.6.1","text":"<p>Released at 17.04.2016</p> <ul> <li>#163 Fixed dependency cycle bug when using mangoo-test-utilities (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-260","title":"Version 2.6.0","text":"<p>Released at 15.04.2016</p> <ul> <li>Added option to encrypt configuration values (svenkubiak)</li> <li>Switched to default Java 8 Base64 Encoder/Decoder (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.19.Final -&gt; 1.3.21.Final</li> <li>freemarker 2.3.23 -&gt; 2.3.24-incubating</li> <li>pebble 2.2.0 -&gt; 2.2.1</li> <li>hazelcast-client 3.6.1 -&gt; 3.6.2</li> <li>boon-json 0.5.6.RELEASE -&gt; 0.5.7</li> <li>fluentlenium-core 0.10.9 -&gt; 0.13.0</li> <li>scripe-apis 2.4.0 -&gt; 2.5.2</li> <li>scripe-core 2.4.0 -&gt; 2.5.2</li> <li>zt-exec 1.8 -&gt; 1.9</li> <li>dsituils 2.3.0 -&gt; 2.3.2</li> <li>mockito 2.0.44-Beta -&gt; 2.0.46-Beta</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-251","title":"Version 2.5.1","text":"<p>Released at 20.03.2016</p> <ul> <li>Documentation fix</li> </ul>"},{"location":"changelog-archived/#version-250","title":"Version 2.5.0","text":"<ul> <li>#160 Fixed ClassCastException in OAuthLoginFilter (svenkubiak)</li> <li>#159 Added authenticity token and form for Pebble (svenkubiak</li> <li>#154 Added new exception handling for public API (svenkubiak</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.15.Final -&gt; 1.3.19.Final</li> <li>mockito 2.0.42-Beta -&gt; 2.0.44-Beta</li> <li>pebble 2.1.0 -&gt; 2.2.0</li> <li>scripe-apis 2.2.2 -&gt; 2.4.0</li> <li>scripe-core 2.2.2 -&gt; 2.4.0</li> <li>hazlecast-client 3.6 -&gt; 3.6.1</li> <li>json-path 2.1.0 -&gt; 2.2.0</li> <li>fleunt-hc 4.5.1 -&gt; 4.5.2</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-241","title":"Version 2.4.1","text":"<p>Released at 23.02.2016</p> <ul> <li>#157 Fixed bug that prevented authentication wrong showing an error (svenkubiak)</li> <li>Added additional methods for mapping collections in JSONUtils (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-240","title":"Version 2.4.0","text":"<p>Released at 20.02.2016</p> <ul> <li>#154 Added limit for max post size (svenkubiak)</li> <li>#146 Updated to 2.x of Scribe OAuth library (svenkubiak)</li> <li>#145 Added provider for TemplateEngine and second Template Engine Pebble (svenkubiak)</li> <li>#139 Added utility methods for Two-Factor-Authentication (svenkubiak, MrDunne)</li> <li>#134 Change documentation from ascidoc to MkDocs (svenkubiak)</li> <li>#138 Added provider for cache (svenkubiak)</li> <li>#133 SSE and WSS informations are now stored in cache (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Updated documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.15.Final -&gt; 1.3.18.Final</li> <li>mockito 2.0.40-Beta -&gt; 2.0.42-Beta</li> <li>dsiutils 2.2.6 -&gt; 2.3.0</li> <li>jersey-media-sse 2.22.1 -&gt; 2.22.2</li> <li>snakeyaml 1.16 -&gt; 1.17</li> <li>jetty-websocket 8.1.18.v20150929 -&gt; 8.1.19.v20160209</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-231","title":"Version 2.3.1","text":"<p>Released at 27.01.2016</p> <ul> <li>Fxed bug when config injector was initialized in application start (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-230","title":"Version 2.3.0","text":"<p>Released at 26.01.2016</p> <ul> <li>#126 Added i18n cookie to LocaleHandler (MrDunne)</li> <li>#118 Refactored request chaining for custom handlers (svenkubiak, MarkVink)</li> <li>#122 Fixed inconsistency configuration controller package (MrDunne)</li> <li>#109 Refactored Config (svenkubiak)</li> <li>#120Added getAcceptLangauge to Request (MrDunne)</li> <li>#121 Updated readme (MrDunne)</li> <li>Added an option to add a custom cookie in test utilities request method (svenkubiak)</li> <li>Removed Mangoo.TEST enum in test utilities (svenkubiak)</li> <li>Removed cache provider (svenkubiak)</li> <li>Refactored LocaleHandler (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Updated documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.12.Final -&gt; 1.3.15.Final</li> <li>mockito 2.0.36-Beta -&gt; 2.0.40-Beta</li> <li>dsiutils 2.2.5 -&gt; 2.2.6</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-220","title":"Version 2.2.0","text":"<p>Released at 10.01.2016</p> <ul> <li>#110 Added X-Response-Header (svenkubiak)</li> <li>#108 Refactored RequestHandler (svenkubiak)</li> <li>#98 Improved RequestHandler (svenkubiak)</li> <li>Added LocalDateTime timestamp of application start (svenkubiak)</li> <li>Added new Benchmark project (svenkubiak)</li> <li>Improved application startup time (svenkubiak)</li> <li>Updated documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.10.Final -&gt; 1.3.12.Final</li> <li>bcprov-jdk15on 1.53 -&gt; 1.54</li> <li>mockito 2.0.33-Beta -&gt; 2.0.36-Beta</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-210","title":"Version 2.1.0","text":"<p>Released at 21.12.2015</p> <ul> <li>#103 Fixed bug when cookie encryption was enabled (svenkubiak)</li> <li>#102 Made Cache eviction configurable (svenkubiak)</li> <li>#101 Fixed keys in archetype (MarkVink)</li> <li>#97 Fixed incorrect Form documentation (svenkubiak, MarkVink)</li> <li>#95 Added new @memory administrative URL (svenkubiak)</li> <li>#94 Added new @system administrative URL (svenkubiak)</li> <li>#93 Improved DispatcherHandler/RequestHandler (svenkubiak)</li> <li>Updated documentation (svenkubiak, MarkVink)</li> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.4.1 -&gt; 2.5</li> <li>mockito 2.0.31-Beta -&gt; 2.0.33-Beta</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-202","title":"Version 2.0.2","text":"<p>Released at 17.12.2015</p> <ul> <li>#91 Added numeric validation (svenkubiak)</li> <li>#90 Added JSONUtils for custom serialization with annotations (svenkubiak)</li> <li>#89 Added Internal Server Error to Response class (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Updated documentation (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-201","title":"Version 2.0.1","text":"<p>Released at 13.12.2015</p> <ul> <li>Fixed bug in documentation asciidoc file (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-200","title":"Version 2.0.0","text":"<p>Released at 13.12.2015</p> <ul> <li>#79 Add Server-Sent Events handler (svenkubiak)</li> <li>#78 Switched to plugin and dependency management in root pom.xml (svenkubiak)</li> <li>#69 Restructured integration tests (svenkubiak)</li> <li>#76 Improved handling of values in forms (svenkubiak)</li> <li>#77 Added option for adding custom cookies (svenkubiak)</li> <li>#75 Fixed bug that did not handle remember in authentication correctly (svenkubiak)</li> <li>#74 Refactored test utilities (svenkubiak)</li> <li>#64 Move to log4j2 for logging (svenkubiak)</li> <li>#53 Extracted Mailer to own extension (svenkubiak)</li> <li>#66 Removed all redundant legacy code (svenkubiak)</li> <li>#45 Removed all @deprecated methods and classes (svenkubiak)</li> <li>Refactored routing mechanism to routes.yaml file (svenkubiak)</li> <li>Code cleanup, refactorings and more JavaDoc (svenkubiak)</li> <li>Updated Documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.3.Final -&gt; 1.3.10.Final</li> <li>guava 18.0 -&gt; 19.0</li> <li>fluent-hc 4.4.1 -&gt; 4.5.1</li> <li>fluentlenium-core 0.10.3 -&gt; 0.10.8</li> <li>json-path 2.0.0 -&gt; 2.1.0</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-132","title":"Version 1.3.2","text":"<p>Released at 19.11.2015</p> <ul> <li>Fixed NPE in maven plugin (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-131","title":"Version 1.3.1","text":"<p>Released at 25.10.2015</p> <ul> <li>Fixed bug that displayed the wrong previous firing time on @scheduler page (svenkubiak)</li> <li>Fixed bug in table that displayed schedule job on @scheduler page (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-130","title":"Version 1.3.0","text":"<ul> <li>#73 Added Basic HTTP authentication for administrative URLs (svenkubiak)</li> <li>#72 Added @scheduler administrative URL (svenkubiak)</li> <li>#71 Added autostart option to scheduler (svenkubiak)</li> <li>Code cleanup, refactorings and more javadoc (svenkubiak)</li> <li>Updated Documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.3.0.Final -&gt; 1.3.3.Final</li> <li>bcprov-jdk15on 1.52 -&gt; 1.53</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-120","title":"Version 1.2.0","text":"<p>Released at 17.10.2015</p> <ul> <li>#33 Added Cookie versioning (svenkubiak)</li> <li>#57 Added OAuth to authentication (svenkubiak)</li> <li>#61 Move Body to Request (svenkubiak)</li> <li>#58 Added @metrics administrative URL (svenkubiak)</li> <li>Added PUT and DELETE to MangooRequest in test utilities (svenkuibiak)</li> <li>Fixed typo in MangooRequestFilter interface (svenkubiak)</li> <li>Updated Documentation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 1.2.12.Final -&gt;1.3.0.Final</li> <li>quartz 2.2.1 -&gt; 2.2.2</li> <li>jetty-websocket 8.1.17.v20150415 -&gt; 8.1.18.v20150929</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-114","title":"Version 1.1.4","text":"<p>Released at 04.10.2015</p> <ul> <li>Fixed bug when sending binary content (svenkubiak)</li> <li>ExceptionHandler now preserves root cause when exception occurs (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-113","title":"Version 1.1.3","text":"<p>Released at 21.09.2015</p> <ul> <li>#62 Set default encoding (UTF-8) to form parsing (svenkubiak)</li> <li>#59 Fixed a NPE when template exception was caught (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-112","title":"Version 1.1.2","text":"<p>Released at 17.09.2015</p> <ul> <li>Fixed a NPE when a Request object and JSON was required in a controller method (svenkubiak)</li> <li>Refactored dev mode exception template (svenkubiak)</li> <li>Fixed bug that did not show exception in frontend in dev mode (svenkubiak)</li> <li>Fixed typo in ContentType enum (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-111","title":"Version 1.1.1","text":"<p>Released at 15.09.2015</p> <ul> <li>Updated Documentation (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-110","title":"Version 1.1.0","text":"<p>Released at 14.09.2015</p> <ul> <li>Refactored RequestHandler (svenkubiak)</li> <li>Refactored EhCache to Guava Cache (svenkubiak)</li> <li>Added ETag support for dynamic content (svenkubiak)</li> <li>Added a method for adding a complete content map to a template (svenkubiak)</li> <li>Added administrative URLs @health, @routes, @cache and @config (svenkubiak)</li> <li>Updated Documentation (svenkubiak)</li> <li>#52 Refactored filters (svenkubiak)</li> <li>#40 Added handling of multiple parameters in controller method (svenkubiak)</li> <li>#39 Added methods for parameter validation (svenkubiak)</li> <li>#37 Added option to set the secure flag for session and auth cookie (svenkubiak)</li> <li>#35 Added method for regular expression to validation (svenkubiak)</li> <li>#34 Added LocalDate and LocalDateTime as request parameter (svenkubiak)</li> <li>#36 Validation now works for numeric values (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>doctester-core 1.1.6 -&gt; 1.1.8</li> <li>snakeyaml 1.15 -&gt; 1.16</li> <li>junit-toolbox 2.1 -&gt; 2.2</li> <li>undertow-core 1.2.9.Final -&gt; 1.2.12.Final</li> </ul> </li> </ul>"},{"location":"changelog-archived/#version-101","title":"Version 1.0.1","text":"<p>Released at 05.08.2015</p> <ul> <li>Fixed typo in archetype that prevented archetype from building (svenkubiak)</li> </ul>"},{"location":"changelog-archived/#version-100","title":"Version 1.0.0","text":"<p>Released at 31.07.2015</p> <ul> <li>Initial release (svenkubiak)</li> </ul>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#version-940","title":"Version 9.4.0","text":"<p>Released at 14.04.2025</p> <p>Full Changelog</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>junit 5.12.0 -&gt; 5.12.1</li> <li>mockito-core 5.16.0 -&gt; 5.17.0</li> <li>cactoos 0.56.1 -&gt; 0.57.0</li> <li>guava 33.4.0-jre -&gt; 33.4.7-jre</li> <li>mongo-driver-sync 5.3.1 -&gt; 5.4.0</li> <li>commons-io 2.18.0 -&gt; 2.19.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-930","title":"Version 9.3.0","text":"<p>Released at 06.03.2025</p> <p>Full Changelog</p> <ul> <li>Added utility method to retrieve all configured translations / resource bundles (svenkubiak)</li> <li>All new and optimized documentation based on MkDocs Material (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>snakeyaml 2.3 -&gt; 2.4</li> <li>fury-core 0.9.0 -&gt; 0.10.0</li> <li>jackson 2.18.2 -&gt; 2.18.3</li> <li>mockito-core 5.15.2 -&gt; 5.16.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-920","title":"Version 9.2.0","text":"<p>Released at 11.02.2025</p> <p>Full Changelog</p> <ul> <li>Added parsing of a default value from an arg{} config value (svenkubiak)</li> <li>Added cleaner handling of authentication when using mfa (svenkubiak)</li> <li>Added .notModified() to Response class (svenkubiak)</li> <li>Fixed an issue where the default messages.properties was not loaded (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>bouncy-castle 1.79 -&gt; 1.80</li> <li>caffeine 3.1.8 -&gt; 3.2.0</li> <li>mongo-driver-sync 5.3.0 -&gt; 5.3.1</li> <li>commons-codec 1.17.2 -&gt; 1.18.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-910","title":"Version 9.1.0","text":"<p>Released at 13.01.2025</p> <p>Full Changelog</p> <ul> <li>Added handling of boolean request and URL parameter (svenkubiak)</li> <li>Fixed bug in CodecUtils that generated the same uuid (svenkubiak)</li> <li>Fixed bug that did not send the correct cookie when rememberMe was 'true' (svenkubiak)</li> <li>Fixed bug that send the authentication cookie on every request after valid authentication (svenkubiak)</li> <li>Fixed potential NPE in LocaleHandler (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.24.2 -&gt; 2.24.3</li> <li>freemarker-java8 3.0.0 -&gt; 3.0.1</li> <li>freemarker 2.3.33 -&gt; 2.3.34</li> <li>junit 5.11.3 -&gt; 5.11.4</li> <li>guava 33.3.1-jre -&gt; 33.4.0-jre</li> <li>commons-codec 1.17.1 -&gt; 1.17.2</li> <li>re2j 1.7 -&gt; 1.8</li> <li>mongo-driver-sync 5.2.1 -&gt; 5.3.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-900","title":"Version 9.0.0","text":"<p>Released at 10.12.2024</p> <p>Full Changelog</p> <ul> <li>#601 Removed Basic HTTP authentication (svenkubiak)</li> <li>#591 Refactored Response class (svenkubiak)</li> <li>#588 Removed @admin/health endpoint (svenkubiak)</li> <li>#576 Removed all deprecated classes and methods (svenkubiak)</li> <li>Switched from props based configuration yaml based configuration (svenkubiak)</li> <li>Added copy-to-clipboard function to @admin dashboard (svenkubiak)</li> <li>Upgraded SHA hashing to SHA3-512 (svenkubiak)</li> <li>Increase iterations, memory, and parallelism of Argon2 hashing (svenkubiak)</li> <li>Switched to new Paseto library and upgraded to Paseto v4 (svenkubiak)</li> <li>Removed searchbar and table sorter from @admin dashboard (svenkubiak)</li> <li>Added new PasetoFilter and APIFilter to handle easy API authentication (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb-driver-sync 5.2.0 -&gt; 5.2.1</li> <li>fury-core 0.8.0 -&gt; 0.9.0</li> <li>classgraph 4.8.177 -&gt; 4.8.179</li> <li>greenmail 2.1.0 -&gt; 2.1.2</li> <li>commons-io 2.17.0 -&gt; 2.18.0</li> <li>log4j 2.24.1 -&gt; 2.24.2</li> </ul> </li> </ul>"},{"location":"changelog/#version-8110","title":"Version 8.11.0","text":"<p>Released at 04.11.2024</p> <p>Full Changelog</p> <ul> <li>Added option to make an index unique via @Indexed annotation (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>undertow-core 2.3.17.Final -&gt; 2.3.18.Final</li> <li>junit 5.11.1 -&gt; 5.11.3</li> <li>fury-core 0.7.1 -&gt; 0.8.0</li> <li>jackson-databind 2.18.0 -&gt; 2.18.1</li> <li>cactoos 0.56.0 -&gt; 0.56.1</li> <li>bouncy-castle 1.78.1 -&gt; 1.79</li> </ul> </li> </ul>"},{"location":"changelog/#version-8100","title":"Version 8.10.0","text":"<p>Released at 04.10.2024</p> <p>Full Changelog</p> <ul> <li>Fixed issue with multiple ServerSentEvent connections (svenkubiak)</li> <li>Removed external (web) dependency for generating 2FA QR code in @admin (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.23.1 -&gt; 2.24.0</li> <li>fury-core 0.7.0 -&gt; 0.7.1</li> <li>classgraph 4.8.175 -&gt; 4.8.177</li> <li>commons-io 2.16.1 -&gt; 2.17.0</li> <li>guava 33.3.0-jre -&gt; 33.3.1-jre</li> <li>mongodb-driver-sync 5.1.4 -&gt; 5.2.0</li> <li>junit 5.11.0 -&gt; 5.11.1</li> </ul> </li> </ul>"},{"location":"changelog/#version-890","title":"Version 8.9.0","text":"<p>Released at 02.09.2024</p> <p>Full Changelog</p> <ul> <li>Added sanity checks on application startup for multiple mappings with the same URL (svenkubiak)</li> <li>Added new JSON error response method (svenkubiak)</li> <li>Added additional response methods for default templates without rendering (svenkubiak)</li> <li>Added an option to pass an auth origin parameter to the default /login redirect (svenkubiak)</li> <li>Added a method for dropping all indexes of all collections in the connected database (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>fury-core 0.6.0 -&gt; 0.7.0</li> <li>guava 33.2.1-jre -&gt; 33.3.0-jre</li> <li>commons-compress 1.26.2 -&gt; 1.27.0</li> <li>commons-lang 3.15.0 -&gt; 3.17.0</li> <li>mongodb-driver-sync 5.1.2 -&gt; 5.1.3</li> <li>awaitility 4.2.1 -&gt; 4.2.2</li> <li>commons-compress 1.27.0 -&gt; 1.27.1</li> <li>classgraph 4.8.174 -&gt; 4.8.175</li> <li>undertow-core 2.3.15.Final -&gt; 2.3.17.Final</li> <li>freemarker-java8 2.1.0 -&gt; 3.0.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-880","title":"Version 8.8.0","text":"<p>Released at 29.07.2024</p> <p>Full Changelog</p> <ul> <li>Added utils method to generate a UUIDv5 in CodecUtils (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>pretty-time 5.0.8.Final -&gt; 5.0.9.Final</li> <li>jackson 2.17.1 -&gt; 2.17.2</li> <li>commons-codec 1.17.0 -&gt; 1.17.1</li> <li>undertow-core 2.3.14.Final -&gt; 2.3.15.Final</li> <li>commons-lang3 3.14.0 -&gt; 3.15.0</li> <li>fury-core 0.4.1 -&gt; 0.6.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-870","title":"Version 8.7.0","text":"<p>Released at 21.06.2024</p> <p>Full Changelog</p> <ul> <li>Updated design of default error pages (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>commons-validator 1.8.0 -&gt; 1.9.0</li> <li>guava 33.2.0-jre -&gt; 33.2.1-jre</li> <li>freemarker 2.3.32 -&gt; 2.3.33</li> <li>mongodb-driver-sync 5.1.0 -&gt; 5.1.1</li> <li>classgraph 4.8.173 -&gt; 4.8.174</li> <li>undertow-core 2.3.13.Final -&gt; 2.3.14.Final</li> </ul> </li> </ul>"},{"location":"changelog/#version-860","title":"Version 8.6.0","text":"<p>Released at 27.05.2024</p> <p>Full Changelog</p> <ul> <li>Added scheduler overview page in @admin area (svenkubiak)</li> <li>Removed logger overview page in @admin area (svenkubiak)</li> <li>Refactored Response Entity for a more convenience usage (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb-driver-sync 5.0.1 -&gt; 5.1.0</li> <li>guava-jre 33.1.0-jre -&gt; 33.2.0-jre</li> <li>jackson 2.17.0 -&gt; 2.17.1</li> <li>pretty-time 5.0.7.Final -&gt; 5.0.8.Final</li> <li>mockito-core 5.11.0 -&gt; 5.12.0</li> <li>common-logging 1.3.1 -&gt; 1.3.2</li> </ul> </li> </ul>"},{"location":"changelog/#version-850","title":"Version 8.5.0","text":"<p>Released at 28.04.2024</p> <p>Full Changelog</p> <ul> <li>Reduced start-up time by around 50% (svenkubiak)</li> <li>Added additional methods for database quering (svenkubiak)</li> <li>Added additional failsafe when task is scheduled (svenkubiak)</li> <li>Added @Indexed annotation for field indexing (svenkubiak)</li> <li>Updated admin dashboard to latest version of bulma (svenkubiak)</li> <li>Fix bug that set the wrong cache value when using expiry (svenkubiak)</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb-driver-sync 5.0.0 -&gt; 5.0.1</li> <li>classgraph 4.8.168 -&gt; 4.8.172</li> <li>bouncycastle 1.77 -&gt; 1.78.1</li> <li>undertow-core 2.3.12.Final -&gt; 2.3.13.Final</li> </ul> </li> </ul>"},{"location":"changelog/#version-840","title":"Version 8.4.0","text":"<p>Released at 02.04.2024</p> <p>Full Changelog</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Added config option to disable persistence (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mongodb-driver-sync 4.11.1 -&gt; 5.0.0</li> <li>commons-compress 1.26.0 -&gt; 1.26.1</li> <li>log4j 2.23.0 -&gt; 2.23.1</li> <li>guava 33.0.0-jre -&gt; 33.1.0-jre</li> <li>commons-io 2.15.1 -&gt; 2.16.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-830","title":"Version 8.3.0","text":"<p>Released at 25.02.2024</p> <p>Full Changelog</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>mockito-core 5.9.0 -&gt; 5.10.0</li> <li>junit 5.10.1 -&gt; 5.10.2</li> <li>commons-codec 1.16.0 -&gt; 1.16.1</li> <li>undertow-core 2.3.10.Final -&gt; 2.3.12.Final</li> <li>log4j 2.22.1 -&gt; 2.23.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-820","title":"Version 8.2.0","text":"<p>Released at 22.01.2024</p> <p>Full Changelog</p> <ul> <li>Sonar refactorings (svenkubiak)</li> <li>Replaced Guava event bus with new event bus based on reactive streams (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>log4j 2.22.0 -&gt; 2.22.1</li> <li>jackson 2.16.0 -&gt; 2.16.1</li> <li>mockito-core 5.8.0 -&gt; 5.9.0</li> </ul> </li> </ul>"},{"location":"changelog/#version-810","title":"Version 8.1.0","text":"<p>Released at 19.12.2023</p> <p>Full Changelog</p> <ul> <li>Added additional cache statistics to /@admin (svenkubiak)</li> <li>Added additional cache retrieval method with fallback option (svenkubiak)</li> <li>Switched scheduler execution to virtual threads (svenkubiak)</li> <li>Switched cache handling from Guava to Caffeine (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>commons-io 2.15.0 -&gt; 2.16.0</li> <li>fury-core 0.3.1 -&gt; 0.4.1</li> <li>mockito-core 5.7.0 -&gt; 5.8.0</li> <li>commons-validator 1.7 -&gt; 1.8</li> <li>guava 32.1.3-jre -&gt; 33.0.0-jre</li> </ul> </li> </ul>"},{"location":"changelog/#version-800","title":"Version 8.0.0","text":"<p>Released at 28.11.2023</p> <p>Full Changelog</p> <ul> <li>Removed Morphia in favour of a direct MongoDB integration (svenkubiak)</li> <li>Removed all deprecated methods and classes (svenkubiak)</li> <li>Updated to Java 21</li> <li>Sonar refactorings (svenkubiak)</li> <li>Version bumps (svenkubiak)<ul> <li>commons-lang3 3.13.0 -&gt; 3.14.0</li> <li>fury-core 0.3.0 -&gt; 0.3.1</li> </ul> </li> </ul>"},{"location":"configuration/","title":"Configuration","text":"<p>mangoo I/O relies on a single configuration file for your application, based on SnakeYAML. The <code>config.yaml</code> file is located in the <code>src/main/resources</code> folder, along with other non-Java files. You can customize settings by adding values to <code>config.yaml</code>. For example:</p> <pre><code>application:\n  foo: bar\n</code></pre> <p>mangoo I/O provides a set of default property values that configure the application. See default values for a full list of configuration options and their defaults.</p>"},{"location":"configuration/#accessing-configuration-values","title":"Accessing Configuration Values","text":"<p>Configuration values are accessed using dot notation based on their hierarchy. For example:</p> <pre><code>application:\n  api:\n    key: foo\n</code></pre> <p>This value can be accessed using:</p> <pre><code>config.getString(\"application.api.key\");\n</code></pre>"},{"location":"configuration/#injecting-the-config-class","title":"Injecting the Config Class","text":"<p>You can retrieve configuration values by injecting the <code>Config</code> class in two ways:</p>"},{"location":"configuration/#member-variable-injection","title":"Member Variable Injection","text":"<pre><code>@Inject\nprivate Config config;\n</code></pre>"},{"location":"configuration/#constructor-injection-recommended","title":"Constructor Injection (Recommended)","text":"<pre><code>@Inject\nprivate MyClass(Config config) {\n    // Use config\n}\n</code></pre> <p>You can retrieve configuration values either by specifying a key or using predefined constants from mangoo I/O: <pre><code>config.getString(\"application.minify.js\");\nconfig.getString(Key.APPLICATION_MINIFY_JS);\n</code></pre></p>"},{"location":"configuration/#configuration-modes","title":"Configuration Modes","text":"<p>mangoo I/O offers three configuration modes: dev, test, and prod.</p> <ul> <li>Dev mode is activated automatically when starting the application using the Maven plugin:   <pre><code>mvn mangooio:run\n</code></pre></li> <li>Test mode is activated during unit tests.</li> <li>Prod mode is the default if no other mode is specified.</li> </ul> <p>To manually set a mode, use:</p> <pre><code>System.setProperty(\"application.mode\", \"dev\");\n</code></pre> <p>Or pass it as a JVM argument:</p> <pre><code>... -Dapplication.mode=dev\n</code></pre>"},{"location":"configuration/#mode-specific-configuration","title":"Mode-Specific Configuration","text":"<p>You can define mode-specific settings by prefixing configuration values:</p> <pre><code>default:\n  application:\n    name: foo\n    url: http://localhost\n\nenvironments:\n  test:\n    application:\n      name: foo\n      url:  https://test.mydomain.com\n\n  prod:\n    application:\n      name: foo\n      url:  https://mydomain.com\n</code></pre> <p>By default, mangoo I/O uses values from the <code>default</code> section, which are overridden by environment-specific values when the corresponding mode is active.</p>"},{"location":"configuration/#encrypted-configuration-values","title":"Encrypted Configuration Values","text":"<p>Configuration values in <code>config.yaml</code> can be encrypted using public/private key encryption. Encrypted values are decrypted at runtime and stored in-memory.</p> <p>To use encryption, generate a key pair via the mangoo I/O administrative backend. Once generated, you can encrypt configuration values and set them in <code>config.yaml</code> as follows:</p> <pre><code>application:\n  db:\n    username: cryptex{...}\n    password: cryptex{...}\n</code></pre> <p>The private key must be provided as a JVM argument:</p> <pre><code>... -Dapplication.privatekey=/path/to/privatekey\n</code></pre> <p>Note: The encryption prefix is <code>cryptex{}</code>, without a trailing \"t\", based on the Cryptex concept.</p>"},{"location":"configuration/#passing-jvm-arguments","title":"Passing JVM Arguments","text":"<p>JVM arguments can be used in configuration values by using the <code>arg{}</code> syntax:</p> <pre><code>application:\n  db:\n    username: arg{}\n</code></pre> <p>This configuration will use the corresponding JVM argument if provided:</p> <pre><code>... -Dapplication.db.username=myusername\n</code></pre> <p>You can also specify default values:</p> <pre><code>application:\n  db:\n    username: arg{defaultuser}\n</code></pre>"},{"location":"configuration/#default-values","title":"Default Values","text":"<p>This is an overview of the out-of-the box configuration options for the config.yaml and their default values, if the properties are not configured in the config.yaml file.</p> Key Description Default Value application.admin.enable Activates the admin dashboard false application.admin.password Password for the admin dashboard - application.admin.secret Secret for the admin dashboard. If configured, enabled MFA for the admin dashboard - application.admin.username Username for the admin dashboard - application.admin.locale Locale for the admin dashoard en_EN application.api.key API key for the build-in ApiKeyFilter - application.controller Package name where the controller classes are located controllers. application.language Language of the application en application.name Name of the application mangooio-application application.paseto.secret Secret for the build-in PasetoFilter - application.secret Default application secret - authentication.cookie.expires Activates that the cookie has a defined lifetime, otherwise the cookie is only valid for the browser session false authentication.cookie.name Name of the authentication cookie mangooio-authentication authentication.cookie.remember.expires Lifetime of the cookie in hours if remember me is activated 720 authentication.cookie.secret Secret for the authentication cookie -&gt; application.secret value authentication.cookie.secure Set the secure attribute of the authentication cookie false authentication.cookie.token.expires Lifetime of the token and the cookie in minutes 60 authentication.lock Number of attemps after an account gets locked; Only valid if build-in authentication is used 10 authentication.redirect.login Redirect URL for the login page when build-in authentication is used - authentication.redirect.mfa Redirect URL for the MFA page when build-in authentication is used - authentication.origin Activates that an \"?origin=\" parameter with the request URL is added during authentication false connector.ajp.host AJP host - connector.ajp.port AJP port 0 connector.http.host HTTP host - connector.http.port HTTP port - cors.alloworigin Header value for Access-Control-Allow-Origin ^http(s)?://(www.)?example.(com|org)$ cors.enable Activate sending of CORS headers false cors.headers.allowcredentials Header value for Access-Control-Allow-Credentials true cors.headers.allowheaders Header value for Access-Control-Allow-Headers Authorization,Content-Type,Link,X-Total-Count,Range cors.headers.allowmethods Header value for Access-Control-Allow-Methods DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT cors.headers.exposeheaders Header value for Access-Control-Expose-Headers Accept-Ranges,Content-Length,Content-Range,ETag,Link,Server,X-Total-Count cors.headers.maxage Header value for Access-Control-Max-Age 864000 cors.urlpattern Regex pattern on which the CORS headers should be checked against ^http(s)?://([^/]+)(:([^/]+))?(/([^/])+)?/api(/.*)?$ flash.cookie.name Name of the flash cookie mangooio-flash flash.cookie.secret Secret for the flash cookie -&gt; application.secret value i18n.cookie.name Name of the i18n cookie mangooio-i18n metrics.enable Activates collecting metrics which are shown in the admin dashboard false persistence.enable Activates default persistence with MongoDB true mongo.auth Activates MongoDB authentication false mongo.authdb Name of the MongoDB AuthDB - mongo.dbname Name of the MongoDB database mangoo-io-mongodb mongo.embedded Activates the build-in in-memory MongoDB false mongo.host MongoDB host localhost mongo.password MongoDB password - mongo.port MongoDB port 27017 mongo.username MongoDB username - scheduler.enable Activates the build-in scheduker true session.cookie.expires Activates that the cookie has a defined lifetime, otherwise the cookie is only valid for the browser session false session.cookie.name Name of the seesion cookie mangooio-session session.cookie.secret Secret of the seesion cookie -&gt; application.secret value session.cookie.secure Set the secure attribute of the session cookie - session.cookie.token.expires Lifetime of the token and the cookie in minutes 60 smtp.authentication Axtivates SMTP authentication false smtp.debug Acticates SMTP debugging false smtp.from SMTP from address mangoo noreply@mangoo.local smtp.host SMTP host address localhost smtp.password SMTP password - smtp.port SMTP port 25 smtp.protocol SMTP protocol smtps smtp.username SMTP username - undertow.maxentitysize Maximum size of an HTTP request entity (body) 4194304 byte"},{"location":"controllers/","title":"Controllers","text":"<p>Every controller method, whether it renders a template, sends JSON, or just returns an HTTP status, must return a <code>Response</code> object. This is handled using the <code>Response</code> class of mangoo I/O. Below is an example of a controller method:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\n\npublic class ApplicationController {\n    public Response index() {\n        return Response.ok();\n    }\n}\n</code></pre> <p>The example above returns a blank HTML page without any rendering.</p>"},{"location":"controllers/#predefined-html-templates","title":"Predefined HTML Templates","text":"<p>Mangoo I/O provides predefined HTML templates for standard responses:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\n\npublic class ApplicationController {\n    public Response index() {\n        return Response.ok().bodyDefault();\n    }\n}\n</code></pre> <p>To trigger rendering of a Freemarker template, use <code>render()</code>:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\n\npublic class ApplicationController {\n    public Response index() {\n        return Response.ok().render();\n    }\n\n    public Response foo() {\n        return Response.ok().render(\"bar\", \"value\");\n    }\n}\n</code></pre> <p>By convention, the corresponding Freemarker template is expected to be in:</p> <pre><code>/src/main/resources/templates/CONTROLLER_NAME/METHOD_NAME.ftl\n</code></pre> <p>For example:</p> <pre><code>/src/main/resources/templates/ApplicationController/index.ftl\n</code></pre> <p>Note</p> <p>Mapping of controller methods to templates is case-sensitive.</p> <p>With the previously mapped request in the <code>Bootstrap.java</code> file, a request to <code>/</code> will render the <code>index.ftl</code> template and send it along with an HTTP 200 OK response.</p>"},{"location":"controllers/#request-and-query-parameters","title":"Request and Query Parameters","text":"<p>Mangoo I/O makes handling request or query parameters straightforward. Assume the following mapping in your <code>Bootstrap</code> class:</p> <pre><code>Bind.controller(MyController.class).withRoutes(\n    On.get().to(\"/foo/{id}\").respondWith(\"myMethod\")\n);\n</code></pre> <p>Here, <code>{id}</code> in the URL defines a request parameter.</p> <p>For example, given the request:</p> <pre><code>/user/1?foo=bar\n</code></pre> <p>Both request and query parameters can be accessed in the controller method:</p> <pre><code>public Response index(int id, String foo) {\n    // Process id and foo\n    return Response.ok().render();\n}\n</code></pre> <p>Mangoo I/O automatically converts passed parameters into the required data types.</p>"},{"location":"controllers/#supported-parameter-types","title":"Supported Parameter Types","text":"<p>The following parameter types are supported by default:</p> <pre><code>String\nInteger / int\nFloat / float\nDouble / double\nLong / long\nLocalDate\nLocalDateTime\nOptional\n</code></pre> <ul> <li>Double and Float values must use a <code>.</code> delimiter, even if the query parameter is passed with <code>,</code>.</li> <li>All parameters are case-sensitive. For example, if a method parameter is <code>localDateTime</code>, it must be mapped exactly in Bootstrap URL mapping, like so:</li> </ul> <pre><code>/foo/{localDateTime}\n</code></pre> <ul> <li>Date Formats<ul> <li><code>LocalDate</code>: <code>yyyy-MM-dd</code> (<code>ISO_LOCAL_DATE</code>)</li> <li><code>LocalDateTime</code>: <code>yyyy-MM-ddThh:mm:ss</code> (<code>ISO_LOCAL_DATE_TIME</code>)</li> </ul> </li> </ul>"},{"location":"controllers/#unsupported-parameter-types","title":"Unsupported Parameter Types","text":"<p>The following classes cannot be used as request or query parameters but can still be used in controller methods:</p> <pre><code>Request\nSession\nForm\nFlash\nAuthentication\nMessages\n</code></pre> <p>These will be explained in the next chapters.</p>"},{"location":"controllers/#custom-handlers","title":"Custom Handlers","text":"<p>Using Google Guice, you can customize request handlers as needed. To override a handler, first bind your custom handler in your <code>Modules</code> class:</p> <pre><code>bind(LocaleHandler.class).to(MyLocaleHandler.class);\n</code></pre> <p>Then, extend the default handler class:</p> <pre><code>public class MyLocaleHandler extends LocaleHandler {\n\n    @Override\n    public void handleRequest(HttpServerExchange exchange) throws Exception {\n        // Custom handling logic\n    }\n\n    @Override\n    protected void nextHandler(HttpServerExchange exchange) throws Exception {\n        // Call a different handler instead of the default one\n    }\n}\n</code></pre>"},{"location":"controllers/#request-validation","title":"Request Validation","text":"<p>Mangoo I/O allows validation of incoming request parameters.</p> <pre><code>public Response index(Request request) {\n    request.expectValue(\"bar\");\n    request.expectEmail(\"foo\");\n\n    if (request.isValid()) {\n        // Process request\n    } else {\n        // Handle invalid request\n    }\n}\n</code></pre>"},{"location":"controllers/#returning-validation-errors-as-json","title":"Returning Validation Errors as JSON","text":"<p>You can return validation errors as a JSON response:</p> <pre><code>public Response index(Request request) {\n    request.expectValue(\"bar\");\n    request.expectEmail(\"foo\");\n\n    if (!request.isValid()) {\n        return Response.badRequest().bodyJson(request.getErrors());\n    }\n\n    return Response.ok();\n}\n</code></pre>"},{"location":"controllers/#request-object-and-values","title":"Request Object and Values","text":"<p>The <code>Request</code> object provides access to headers, URL values, and additional request data. It can be passed directly into a controller method:</p> <pre><code>public Response index(Request request) {\n    // Process request\n    return Response.ok();\n}\n</code></pre> <p>When dealing with multiple query or request parameters, instead of listing them explicitly, you can access them using:</p> <pre><code>public Response index(Request request) {\n    String foo = request.getParameter(\"foo\");\n    return Response.ok();\n}\n</code></pre>"},{"location":"cors/","title":"Cross-Origin Resource Sharing (CORS)","text":"<p>Mangoo I/O provides built-in support for Cross-Origin Resource Sharing (CORS) on the backend. Before using CORS, you must enable it in the <code>config.yaml</code> file:</p> <pre><code>cors:\n  enable: true\n</code></pre>"},{"location":"cors/#configuring-cors","title":"Configuring CORS","text":"<p>Once enabled, you can define specific CORS headers in the <code>config.yaml</code> file to fine-tune access control. Below is an example configuration:</p> <pre><code>cors:\n  enable: true\n  alloworigin: ^localhost$|^127(?:\\.[0-9]+){0,2}\\.[0-9]+$|^(?:0*\\:)*?:?0*1$\n  urlpattern: ^http(s)?://([^/]+)(:([^/]+))?(/([^/])+)?/api(/.*)?$\n  headers:\n    allowcredentials: true\n    allowheaders: Content-Range,ETag\n    allowmethods: GET,POST,PATCH\n    exposeheaders: Authorization,Content-Type\n    maxage: 86400\n</code></pre>"},{"location":"cors/#explanation-of-configuration","title":"Explanation of Configuration:","text":"<ul> <li><code>alloworigin</code>: Defines allowed origins using a regex pattern.</li> <li><code>urlpattern</code>: Specifies which URLs should be matched for CORS rules.</li> <li><code>headers</code>:<ul> <li><code>allowcredentials</code>: Enables credentials such as cookies or authorization headers.</li> <li><code>allowheaders</code>: Lists HTTP headers allowed in requests.</li> <li><code>allowmethods</code>: Defines HTTP methods permitted for cross-origin requests.</li> <li><code>exposeheaders</code>: Specifies response headers that can be exposed to the client.</li> <li><code>maxage</code>: Sets the maximum age (in seconds) for caching preflight requests.</li> </ul> </li> </ul> <p>For more details, refer to the CORS specification.</p>"},{"location":"dependency-injection/","title":"Dependency Injection","text":"<p>Mangoo I/O leverages Google Guice for dependency injection.</p>"},{"location":"dependency-injection/#injecting-dependencies","title":"Injecting Dependencies","text":"<p>The simplest way to inject a dependency is by defining it as a member variable using the <code>@Inject</code> annotation:</p> <pre><code>@Inject\nprivate MyClass myClass;\n</code></pre>"},{"location":"dependency-injection/#retrieving-an-instance-manually","title":"Retrieving an Instance Manually","text":"<p>You can also obtain an instance of a class using the static method <code>Application.getInstance()</code>:</p> <pre><code>MyClass myClass = Application.getInstance(MyClass.class);\n</code></pre>"},{"location":"dependency-injection/#constructor-injection-recommended","title":"Constructor Injection (Recommended)","text":"<p>The preferred approach for dependency injection is through the constructor, ensuring immutability and better testability:</p> <pre><code>private final Foo foo;\n\n@Inject\npublic MyClass(Foo foo) {\n    this.foo = Objects.requireNonNull(foo);\n}\n</code></pre> <p>Constructor injection enforces dependency availability and prevents accidental modification of injected dependencies.</p> <p>This document is optimized for MkDocs Material with proper formatting and improved readability.</p>"},{"location":"emails/","title":"Sending Emails with mangoo I/O","text":"<p>mangoo I/O leverages Jakarta Mail to facilitate email sending. Below is an example of how to send an email:</p> <pre><code>Mail.newMail()\n        .from(\"Jon Snow &lt;jon.snow@winterfell.com&gt;\")\n        .to(\"sansa.stark@westeros.com\")\n        .subject(\"Lord of Light\")\n        .textMessage(\"What is dead may never die\")\n        .send();\n</code></pre>"},{"location":"emails/#important-notes","title":"Important Notes","text":"<ul> <li>Messages that use templates are automatically set to HTML format.</li> <li>Default email encoding is UTF-8.</li> <li>Variables like <code>Session</code>, <code>Flash</code>, and others that are available in standard templates are not available when sending emails. To include such data, pass them explicitly using the <code>withContent</code> method.</li> </ul>"},{"location":"filters/","title":"Filters","text":"<p>Filters allow execution of code before each controller or method in a controller is executed. To apply a filter, use the <code>@FilterWith</code> annotation:</p> <pre><code>@FilterWith(MyFilter.class)\n</code></pre> <p>mangoo I/O provides two types of filters:</p> <ol> <li> <p>Controller or Method Filters \u2013 Applied at the class or method level.</p> </li> <li> <p>Global Filters \u2013 Applied to all controller classes and methods.</p> </li> </ol>"},{"location":"filters/#controller-or-method-filters","title":"Controller or Method Filters","text":"<p>Filters can be applied to an entire controller class or individual methods. If applied at the class level, it executes before every method in that class. If applied to a method, it only executes before that specific method.</p> <pre><code>package controllers;\n\nimport io.mangoo.annotations.FilterWith;\nimport io.mangoo.filters.AuthenticityFilter;\nimport io.mangoo.routing.Response;\n\n@FilterWith(MyFilter.class)\npublic class MyController {\n    public Response token() {\n        return Response.withOk().andContent(\"foo\", \"bar\");\n    }\n\n    @FilterWith(AuthenticityFilter.class)\n    public Response valid() {\n        return Response.withOk().andContent(\"foo\", \"bar\");\n    }\n}\n</code></pre> <p>In this example, <code>MyFilter</code> executes for both <code>token()</code> and <code>valid()</code>. Additionally, <code>AuthenticityFilter</code> is applied to <code>valid()</code>.</p>"},{"location":"filters/#multiple-filters","title":"Multiple Filters","text":"<p>You can assign multiple filters to a controller or method:</p> <pre><code>@FilterWith({MyFirstFilter.class, MySecondFilter.class})\n</code></pre> <p>Filters execute in the order they are declared.</p>"},{"location":"filters/#global-filter","title":"Global Filter","text":"<p>A global filter executes on every mapped request in <code>Bootstrap</code> class for all mapped controller classes and methods. This is useful for enforcing application-wide logic such as language settings or authentication.</p> <p>Unlike controller and method filters, a global filter must implement the <code>MangooRequestFilter</code> interface:</p> <pre><code>import io.mangoo.interfaces.filters.OncePerRequestFilter;\nimport io.mangoo.routing.Response;\nimport io.mangoo.routing.bindings.Request;\n\npublic class MyGlobalFilter implements OncePerRequestFilter {\n    @Override\n    public Response execute(Request request, Response response) {\n        return response;\n    }\n}\n</code></pre>"},{"location":"filters/#registering-a-global-filter","title":"Registering a Global Filter","text":"<p>After creating a global filter, bind it in <code>Module.java</code>:</p> <pre><code>import com.google.inject.AbstractModule;\nimport com.google.inject.Singleton;\nimport filters.MyGlobalFilter;\nimport io.mangoo.interfaces.MangooLifecycle;\nimport io.mangoo.interfaces.filters.OncePerRequestFilter;\n\n@Singleton\npublic class Module extends AbstractModule {\n    @Override\n    protected void configure() {\n        bind(MangooRequestFilter.class).to(MyGlobalFilter.class);\n    }\n}\n</code></pre> <p>Note</p> <p>Only one global filter can be used per mangoo I/O application.</p>"},{"location":"filters/#creating-a-custom-filter","title":"Creating a Custom Filter","text":"<p>A controller or method filter must implement the <code>MangooFilter</code> interface:</p> <pre><code>package mangoo.io.filters;\n\nimport io.mangoo.interfaces.MangooControllerFilter;\nimport io.mangoo.routing.bindings.Exchange;\n\npublic class MyFilter implements MangooFilter {\n    @Override\n    public Response filter(Request request, Response response) {\n        // Custom filter logic\n        return response;\n    }\n}\n</code></pre> <p>Filters process requests in the following order: 1. Global filters 2. Controller filters 3. Method filters</p> <p>Only the header and content values are merged with the response object returned by the controller.</p>"},{"location":"filters/#example-csrf-protection-filter","title":"Example: CSRF Protection Filter","text":"<p>Below is an example of an authenticity filter used for CSRF checks:</p> <pre><code>public class AuthenticityFilter implements MangooControllerFilter {\n    @Override\n    public Response execute(Request request, Response response) {\n        if (!request.authenticityMatches()) {\n            return Response.withForbidden().andBody(Template.DEFAULT.forbidden()).end();\n        }\n        return response;\n    }\n}\n</code></pre> <p>This filter checks the request\u2019s authenticity and, if invalid, returns a <code>403 Forbidden</code> response, ending further filter execution.</p> <p>Note</p> <p>Always return a response object. Returning <code>null</code> will result in an exception.</p>"},{"location":"flash/","title":"Flash","text":"<p>When working with forms, it is often necessary to pass information such as error or success messages to the next request. In a stateless environment, mangoo I/O provides the <code>Flash</code> class for this purpose. The <code>Flash</code> class functions similarly to a session but stores data in a temporary flash cookie, which is automatically discarded after the request is completed.</p>"},{"location":"flash/#using-flash-messages-in-controllers","title":"Using Flash Messages in Controllers","text":"<p>To use flash messages, pass the <code>Flash</code> class to your controller method:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport io.mangoo.routing.bindings.Flash;\n\npublic class FlashController {\n    public Response flash(Flash flash) {\n        flash.success(\"This is a success message\");\n        flash.warning(\"This is a warning message\");\n        flash.error(\"This is an error message\");\n        flash.add(\"foo\", \"bar\");\n\n       return Response.ok().redirect(\"/\");\n    }\n}\n</code></pre>"},{"location":"flash/#built-in-flash-methods","title":"Built-in Flash Methods","text":"<p>The <code>Flash</code> class provides three predefined methods for commonly used scenarios: - <code>success(String message)</code>: Stores a success message under the key <code>success</code> - <code>warning(String message)</code>: Stores a warning message under the key <code>warning</code> - <code>error(String message)</code>: Stores an error message under the key <code>error</code></p> <p>Additionally, you can add custom key-value pairs to the flash storage using:</p> <pre><code>flash.add(\"key\", \"value\");\n</code></pre>"},{"location":"flash/#accessing-flash-messages-in-templates","title":"Accessing Flash Messages in Templates","text":"<p>Flash messages are automatically available in templates, without needing to pass the class explicitly. You can retrieve values using:</p> <pre><code>${flash.success}\n${flash.warning}\n${flash.error}\n${flash.foo}\n</code></pre> <p>This allows seamless handling of flash messages in your views.</p>"},{"location":"forms/","title":"Form Handling in mangoo I/O","text":"<p>To access a submitted form in a controller class, you can pass the mangoo I/O <code>Form</code> class as a parameter. Example:</p> <pre><code>public Response index(Form form) {\n    ...\n}\n</code></pre> <p>The <code>Form</code> class provides convenient methods to retrieve form values:</p> <pre><code>public Response index(Form form) {\n    File file = form.getFile();\n    List&lt;File&gt; files = form.getFiles();\n    String firstname = form.get(\"firstname\");\n    ...\n}\n</code></pre>"},{"location":"forms/#important-notes","title":"Important Notes","text":"<ul> <li>The <code>Form</code> class is only available for <code>POST</code> or <code>PUT</code> requests; otherwise, it will be <code>null</code>.</li> <li>The <code>Form</code> class is automatically accessible in templates without explicitly passing it.</li> </ul>"},{"location":"forms/#retaining-form-values-after-redirects","title":"Retaining Form Values After Redirects","text":"<p>By default, form values are not retained after a redirect. To persist form values across redirects, use:</p> <pre><code>form.keep();\n</code></pre> <p>This is useful when handling validation errors while maintaining previously entered values.</p>"},{"location":"forms/#form-validation","title":"Form Validation","text":"<p>Consider the following form in a template:</p> <pre><code>&lt;form action=\"/save\" method=\"post\"&gt;\n    &lt;input type=\"text\" name=\"firstname\" /&gt;\n    &lt;input type=\"text\" name=\"lastname\" /&gt;\n    &lt;input type=\"text\" name=\"email\" /&gt;\n&lt;/form&gt;\n</code></pre> <p>To validate the <code>firstname</code> and <code>lastname</code> fields, use the built-in validation functions:</p> <pre><code>public Response form(Form form) {\n    form.expectEmail(\"email\");\n    form.expectValue(\"firstname\");\n    form.expectValue(\"lastname\");\n\n    if (form.isValid()) {\n        // Handle form\n    }\n    return Response.ok().render();\n}\n</code></pre> <p>The <code>Form</code> class allows checks for field existence, email validation, and more. Use <code>hasErrors()</code> to determine if the form is valid.</p>"},{"location":"forms/#built-in-validations","title":"Built-in Validations","text":"<p>mangoo I/O provides various validation rules:</p> <ul> <li>Required</li> <li>Minimum length</li> <li>Maximum length</li> <li>Match (case-insensitive)</li> <li>Exact match (case-sensitive)</li> <li>Email format</li> <li>IPv4 format</li> <li>IPv6 format</li> <li>Range check</li> <li>Regular expressions</li> <li>Numeric values</li> </ul> <p>Additionally, validations can be bound to a specific field to check values beyond form input:</p> <ul> <li><code>validateTrue</code></li> <li><code>validateFalse</code></li> <li><code>validateNull</code></li> <li><code>validateNotNull</code></li> </ul> <p>These are useful for checking existing usernames or passing custom error messages to form fields.</p>"},{"location":"forms/#handling-form-errors","title":"Handling Form Errors","text":"<p>To display an error in a template, check for errors in a specific field:</p> <pre><code>&lt;#if form.hasError(\"myField\")&gt;\n</code></pre> <p>This is useful for modifying CSS styles or displaying error messages when validation fails.</p> <p>To retrieve a specific error message:</p> <pre><code>${form.getError(\"myField\")}\n</code></pre> <p>For example, it may display:</p> <pre><code>Firstname cannot be blank\n</code></pre>"},{"location":"forms/#customizing-error-messages","title":"Customizing Error Messages","text":"<p>Error messages are defined in <code>messages.properties</code> (or language-specific message files). Default messages can be customized as follows:</p> <pre><code>validation.required={0} is required\nvalidation.min={0} must be at least {1} characters\nvalidation.max={0} can be a maximum of {1} characters\nvalidation.exactMatch={0} must exactly match {1}\nvalidation.match={0} must match {1}\nvalidation.email={0} must be a valid email address\nvalidation.ipv4={0} must be a valid IPv4 address\nvalidation.ipv6={0} must be a valid IPv6 address\nvalidation.range={0} must be between {1} and {2} characters\nvalidation.url={0} must be a valid URL\nvalidation.regex={0} is invalid\nvalidation.numeric={0} must be a numeric value\n</code></pre>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#prerequisites","title":"Prerequisites","text":"<p>Before setting up a mangoo I/O application, ensure that the following dependencies are installed:</p> <ul> <li>Maven (version 3.9.0 or higher)</li> <li>Java (version 21 or higher)</li> </ul>"},{"location":"getting-started/#verifying-java-installation","title":"Verifying Java Installation","text":"<p>To check your installed Java version, run:</p> <pre><code>$ java --version\n...\njava 21.0.6 2025-01-21 LTS\nJava(TM) SE Runtime Environment (build 21.0.6+8-LTS-188)\nJava HotSpot(TM) 64-Bit Server VM (build 21.0.6+8-LTS-188, mixed mode, sharing)\n</code></pre>"},{"location":"getting-started/#verifying-maven-installation","title":"Verifying Maven Installation","text":"<p>To verify Maven, run:</p> <pre><code>$ mvn --version\n...\nApache Maven 3.9.9\nJava version: 21.0.6, vendor: Oracle Corporation, runtime:\nDefault locale: en_US, platform encoding: UTF-8\n</code></pre> <p>Once both dependencies are confirmed, you are ready to create your first mangoo I/O application.</p>"},{"location":"getting-started/#creating-your-first-application","title":"Creating Your First Application","text":"<p>mangoo I/O provides a Maven archetype to quickly generate a new project. Execute the following command:</p> <pre><code>mvn archetype:generate -DarchetypeGroupId=io.mangoo -DarchetypeArtifactId=mangooio-maven-archetype -DarchetypeVersion=$LATEST\n</code></pre> <p>You will be prompted to enter:</p> <ul> <li>Group ID</li> <li>Artifact ID</li> <li>Application name (mandatory)</li> </ul>"},{"location":"getting-started/#compiling-the-project","title":"Compiling the Project","text":"<p>Navigate to your newly created project directory and compile it:</p> <pre><code>mvn clean package\n</code></pre>"},{"location":"getting-started/#running-the-application-in-development-mode","title":"Running the Application in Development Mode","text":"<p>Start your application in development mode using:</p> <pre><code>mvn mangooio:run\n</code></pre> <p>Once dependencies are downloaded, you should see the mangoo I/O startup message confirming a successful launch:</p> <pre><code>10:55:26.399 [main] INFO  io.mangoo.core.Application - HTTP connector listening @127.0.0.1:9090\n10:55:26.407 [main] INFO  io.mangoo.core.Application - mangoo I/O application started in 9051 ms in dev mode. Enjoy.\n</code></pre> <p>If you see the mangoo I/O logo, your application has started successfully. Otherwise, check the error message for troubleshooting.</p>"},{"location":"getting-started/#accessing-your-application","title":"Accessing Your Application","text":"<p>Open your browser and visit:</p> <pre><code>http://localhost:9090\n</code></pre> <p>Your mangoo I/O application is now running. You can import the Maven project into your preferred IDE for further development.</p>"},{"location":"getting-started/#enabling-hot-compiling-in-development-mode","title":"Enabling Hot-Compiling in Development Mode","text":"<p>mangoo I/O supports hot-compiling in development mode, meaning changes to source files are reflected instantly (typically within a second). However, Java requires specific compiler flags for this to work.</p>"},{"location":"getting-started/#configuring-your-ide","title":"Configuring Your IDE","text":""},{"location":"getting-started/#eclipse","title":"Eclipse","text":"<p>Enable the following setting:</p> <pre><code>Settings -&gt; Compiler -&gt; Check \"Store information about method parameter (usable via reflection)\"\n</code></pre>"},{"location":"getting-started/#intellij-idea","title":"IntelliJ IDEA","text":"<p>Add the following compiler flag:</p> <pre><code>Settings -&gt; Java Compiler -&gt; Additional line parameters: \"-parameters\"\n</code></pre> <p>Without this setting, mangoo I/O will not correctly pass request parameters to controllers in development mode.</p> <p>Note</p> <p>This setting is only required in your IDE. When building via Maven, the necessary flags are already configured in the Maven compiler plugin.</p>"},{"location":"getting-started/#application-structure","title":"Application Structure","text":"<p>A mangoo I/O application follows a structured layout. After creating a new project using the Maven archetype, your application structure will look like this:</p> <pre><code>.\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 src\n\u2502   \u251c\u2500\u2500 main\n\u2502   \u2502   \u251c\u2500\u2500 java\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 app\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 Bootstrap.java\n\u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 Module.java\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 controllers\n\u2502   \u2502   \u2502       \u2514\u2500\u2500 ApplicationController.java\n\u2502   \u2502   \u2514\u2500\u2500 resources\n\u2502   \u2502       \u251c\u2500\u2500 config.yaml\n\u2502   \u2502       \u251c\u2500\u2500 files\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 assets\n\u2502   \u2502       \u2502   \u2502   \u251c\u2500\u2500 javascripts\n\u2502   \u2502       \u2502   \u2502   \u2502   \u2514\u2500\u2500 javascript.min.js\n\u2502   \u2502       \u2502   \u2502   \u2514\u2500\u2500 stylesheets\n\u2502   \u2502       \u2502   \u2502       \u2514\u2500\u2500 stylesheet.min.css\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 robots.txt\n\u2502   \u2502       \u251c\u2500\u2500 log4j2.xml\n\u2502   \u2502       \u251c\u2500\u2500 templates\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 ApplicationController\n\u2502   \u2502       \u2502   \u2502   \u2514\u2500\u2500 index.ftl\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 layout.ftl\n\u2502   \u2502       \u2514\u2500\u2500 translations\n\u2502   \u2502           \u251c\u2500\u2500 messages.properties\n\u2502   \u2502           \u251c\u2500\u2500 messages_de.properties\n\u2502   \u2502           \u2514\u2500\u2500 messages_en.properties\n\u2502   \u2514\u2500\u2500 test\n\u2502       \u2514\u2500\u2500 java\n\u2502           \u2514\u2500\u2500 controllers\n\u2502               \u2514\u2500\u2500 ApplicationControllerTest.java\n</code></pre>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Your mangoo I/O application is now set up. Next, explore:</p> <ul> <li>Defining routes and controllers</li> <li>Working with templates and rendering views</li> <li>Handling JSON-based APIs</li> <li>Configuring authentication and security</li> <li>Integrating databases and persistence layers</li> </ul>"},{"location":"internationalization/","title":"Internationalization","text":"<p>Translations in mangoo I/O are based on the standard <code>Locale</code> of Java.</p>"},{"location":"internationalization/#locale-determination-order","title":"Locale Determination Order","text":"<p>The <code>Locale</code> is determined in the following order:</p> <p>Language Parameter in the URL    The language can be specified as either a URL parameter or a query parameter, e.g.:</p> <pre><code>/my/path?lang=en\n/my/path/en\n</code></pre> <p>If a URL parameter is used, the URL must be configured accordingly in the <code>Bootstrap</code> class:</p> <pre><code>On.get().to(\"/foo/bar/{lang}\").respondWith(\"foobar\");\n</code></pre> <p>i18n Cookie in the Request    A language preference can be stored in a cookie. You can create such a cookie using the <code>CookieBuilder</code>, e.g.:</p> <pre><code>public Response localize() {\n    Cookie cookie = CookieBuilder.create()\n            .name(Default.COOKIE_I18N_NAME.toString())\n            .value(\"en\")\n            .build();\n\n    return Response.withOk().andCookie(cookie);\n}\n</code></pre> <p>Accept-Language Header in the Request    The language is determined from the <code>Accept-Language</code> header sent by the client.</p> <p>Default application language</p> <p>The application\u2019s default language can be set in the configuration file:</p> <pre><code>application:\n   language: en\n</code></pre> <p>Hardcoded Default Value    If no other sources define a language, the application defaults to <code>en</code>.</p>"},{"location":"internationalization/#accessing-translated-values","title":"Accessing Translated Values","text":"<p>mangoo I/O provides a convenient way to access translations by injecting the <code>Messages</code> class.</p> <pre><code>package controllers;\n\nimport com.google.inject.Inject;\nimport io.mangoo.i18n.Messages;\nimport io.mangoo.routing.Response;\n\npublic class I18nController {\n\n    @Inject\n    private Messages messages;\n\n    public Response translation() {\n        messages.get(\"my.translation\");\n        messages.get(\"my.othertranslation\", \"foo\");\n        ...\n    }\n}\n</code></pre> <p>The <code>Messages</code> class offers two methods for retrieving translations from the resource bundle: with or without optional parameters.</p> <p>Example resource bundle entries:</p> <pre><code>my.translation=This is a translation\nmy.othertranslation=This is a translation with the parameter: {0}\n</code></pre> <p>Note</p> <p><code>{0}</code> is a placeholder that will be replaced by the passed parameter (<code>\"foo\"</code>).</p>"},{"location":"internationalization/#translation-in-templates","title":"Translation in Templates","text":"<p>To access translations in a template, use the special <code>i18n</code> tag along with the translation key:</p> <pre><code>${i18n(\"my.translation\")}\n</code></pre> <p>To pass a parameter to the translation, append it to the function call:</p> <pre><code>${i18n(\"my.othertranslation\", \"foo\")}\n</code></pre> <p>If no matching key is found in the resource bundle, the template will output an empty value.</p>"},{"location":"logging/","title":"Logging","text":"<p>mangoo I/O utilizes Log4j2 for logging. If you are familiar with Log4j2, creating a new logger instance is straightforward:</p> <pre><code>import org.apache.logging.log4j.Logger;\nimport org.apache.logging.log4j.LogManager;\n\n...\n\nprivate static final Logger LOG = LogManager.getLogger(MyClass.class);\n</code></pre>"},{"location":"logging/#log4j2-configuration","title":"Log4j2 Configuration","text":"<p>The integration follows the automatic configuration mechanism of Log4j2, which looks for specific configuration files during startup.</p>"},{"location":"logging/#environment-specific-configuration","title":"Environment-Specific Configuration","text":"<p>To configure Log4j2 for different environments, use the following naming conventions:</p> <ul> <li>Development and Testing: <pre><code>log4j2-test.*\n</code></pre></li> <li>Production: <pre><code>log4j2.*\n</code></pre></li> </ul>"},{"location":"logging/#filtering-test-configurations-in-production","title":"Filtering Test Configurations in Production","text":"<p>It is crucial to filter out test configurations during the JAR build process to prevent them from becoming active in a production environment. This can be achieved using the maven-jar-plugin with the following configuration:</p> <pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.1.0&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;excludes&gt;\n            &lt;exclude&gt;**/log4j2-test*&lt;/exclude&gt;\n        &lt;/excludes&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>This ensures that any Log4j2 test configurations are not included in the final production JAR.</p>"},{"location":"migrations-archived/","title":"Migrations","text":""},{"location":"migrations-archived/#from-7180-to-7190","title":"From 7.18.0 to 7.19.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7170-to-7180","title":"From 7.17.0 to 7.18.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7160-to-7170","title":"From 7.16.0 to 7.17.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7150-to-7160","title":"From 7.15.0 to 7.16.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7140-to-7150","title":"From 7.14.0 to 7.15.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7130-to-7140","title":"From 7.13.0 to 7.14.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7120-to-7130","title":"From 7.12.0 to 7.13.0","text":"<p>The annotations for @FilterWith and @Run have been moved. Reorganizing imports is advised.</p>"},{"location":"migrations-archived/#from-7110-to-7120","title":"From 7.11.0 to 7.12.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-7100-to-7110","title":"From 7.10.0 to 7.11.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-790-to-7100","title":"From 7.9.0 to 7.10.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-780-to-790","title":"From 7.8.0 to 7.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-770-to-780","title":"From 7.7.0 to 7.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-760-to-770","title":"From 7.6.0 to 7.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-750-to-760","title":"From 7.5.0 to 7.6.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-740-to-750","title":"From 7.4.0 to 7.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-730-to-740","title":"From 7.3.0 to 7.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-720-to-730","title":"From 7.2.0 to 7.3.0","text":"<p>With this release the cache implementation was switched from ehCache to Google Guava cache. This was a drop-in replacement and should be in no effect to end-users.</p> <p>The WebSocket implementation had to be removed and will not be replaced.</p> <p>The ServerSentEvent implementation had to be completely refactored.</p>"},{"location":"migrations-archived/#from-710-to-720","title":"From 7.1.0 to 7.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-700-to-710","title":"From 7.0.0 to 7.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-6xx-to-700","title":"From 6.x.x to 7.0.0","text":"<p>mangoo I/O 7.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading to 7.x:</p> <p>Java 17</p> <p>mangoo I/O now requires and uses Java 17.</p> <p>Removed build-in rate limit handling</p> <p>The built-in rate limit handling has been remove, as rate limiting should be done in a HTTP-Proxy (e.g. nginx).</p> <p>Authenticity handling has been removed</p> <p>Authenticity handling has been removed, as now all major browser support SameSite Cookies which is default in mangoo I/O.</p> <p>Removed slim-jar deployment feature</p> <p>The slim-jar deployment feature has been removed as at was to error prune.</p> <p>Removed JCasbin and authroization handling</p> <p>The JCasbin library and he authorization feature has been remove as the integration and maintenance was to cumbersome.</p> <p>Switched (password) hashing fromJBcrypt to Argon2</p> <p>The built-in password hashing has changed to Argon2. If you have used the build-in authentication mechanism you need to update your stored passwords.</p>"},{"location":"migrations-archived/#from-6140-to-6150","title":"From 6.14.0 to 6.15.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-6130-to-6140","title":"From 6.13.0 to 6.14.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-6120-to-6130","title":"From 6.12.0 to 6.13.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-6110-to-6120","title":"From 6.11.0 to 6.12.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-6100-to-6110","title":"From 6.10.0 to 6.11.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-690-to-6100","title":"From 6.9.0 to 6.10.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-680-to-690","title":"From 6.8.0 to 6.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-670-to-680","title":"From 6.7.0 to 6.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-660-to-670","title":"From 6.6.0 to 6.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-650-to-660","title":"From 6.5.0 to 6.6.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-640-to-650","title":"From 6.4.0 to 6.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-630-to-640","title":"From 6.3.0 to 6.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-620-to-630","title":"From 6.2.0 to 6.3.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-610-to-620","title":"From 6.1.0 to 6.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-600-to-610","title":"From 6.0.0 to 6.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5xx-to-600","title":"From 5.x.x to 6.0.0","text":"<p>mangoo I/O 6.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading to 6.x:</p> <p>Removed 2FA from Basic authentication</p> <p>In previous versions it was possible to add and additional 2FA to basic authentication. This functionality has been removed.</p> <p>Removed SASS and LESS precompiler</p> <p>The precompiler functionality for SASS and LESS has been removed, mainly due to the fact that both Libraries were blowing up the FatJAR by more than 10MB.</p> <p>Renamed Filter interfaces</p> <p>The naming of the global and per request filter has changed. \"MangooFilter\" is now \"PerRequestFilter\" and \"MangooRequestFilter\"is nor \"OncePerRequestFilter\".</p> <p>Switched Authentication of Admin UI</p> <p>The Admin UI was accessible through Basic authentication. This has been changed to a Form/Cookie based authentication and now offers the option to add 2FA to the Admin UI. Configuration of credentials for the Admin UI remains unchanged.</p> <p>Added persistence to core One of the biggest changes in this version is the additional persistence based on MongoDB/Morphia to the Core. There is no need to add the additional mangooio-mongodb-extension anymore.</p>"},{"location":"migrations-archived/#from-5150-to-5160","title":"From 5.15.0 to 5.16.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5140-to-5150","title":"From 5.14.0 to 5.15.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5132-to-5140","title":"From 5.13.2 to 5.14.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5131-to-5132","title":"From 5.13.1 to 5.13.2","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5130-to-5131","title":"From 5.13.0 to 5.13.1","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5120-to-5130","title":"From 5.12.0 to 5.13.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5110-to-5120","title":"From 5.11.0 to 5.12.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5100-to-5110","title":"From 5.10.0 to 5.11.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-5100-to-5101","title":"From 5.10.0 to 5.10.1","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-590-to-5100","title":"From 5.9.0 to 5.10.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-581-to-590","title":"From 5.8.1 to 5.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-580-to-581","title":"From 5.8.0 to 5.8.1","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-570-to-580","title":"From 5.7.0 to 5.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-560-to-570","title":"From 5.6.0 to 5.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-550-to-560","title":"From 5.5.0 to 5.6.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-540-to-550","title":"From 5.4.0 to 5.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-530-to-540","title":"From 5.3.0 to 5.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-520-to-530","title":"From 5.2.0 to 5.3.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-510-to-520","title":"From 5.1.0 to 5.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-501-to-510","title":"From 5.0.1 to 5.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-500-to-501","title":"From 5.0.0 to 5.0.1","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4xx-to-500","title":"From 4.x.x to 5.0.0","text":"<p>mangoo I/O 5.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading to version 5.0.0:</p> <p>Java version</p> <p>Java 11 is now required and supported. It is recommended to set a maven property</p> <pre><code>&lt;properties&gt;\n    &lt;java.version&gt;11&lt;/java.version&gt;\n&lt;/properties&gt;\n</code></pre> <p>and set the source and target variable accordingly in the compiler plugin</p> <pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.8.0&lt;/version&gt;\n    &lt;configuration&gt;\n        &lt;source&gt;${java.version}&lt;/source&gt;\n        &lt;target&gt;${java.version}&lt;/target&gt;\n        &lt;compilerArgument&gt;-parameters&lt;/compilerArgument&gt;\n        &lt;optimize&gt;true&lt;/optimize&gt;\n        &lt;debug&gt;false&lt;/debug&gt;\n    &lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Plugin versions</p> <p>It is recommended to check that your plugins are at the latest available versions.</p> <p>Maven Surefire Plugin</p> <p>In previous versions the Surefire Plugin was used to execute the Unit test via a TestSuite. This has been removed and the according configuration can be removed in the Maven Plugin.</p> <pre><code>&lt;plugin&gt;\n    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n    &lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n    &lt;version&gt;3.0.0-M1&lt;/version&gt;\n&lt;/plugin&gt;\n</code></pre> <p>Maven Jar Plugin</p> <p>As integration of Log4j2 has become cleaner (more on that see below), the Log4j2-test file needs to be filtered when the JAR is created. Therefore, the following configuration needs to be added to the Jar Plugin  org.apache.maven.plugins maven-jar-plugin 3.1.0 */log4j2-test </p> <p>Renamed conf package</p> <p>The previously named \"conf\" package containing the Google Guice Module configration and the Lifecycle class has been renamed to \"app\" and must be renamed accordingly.</p> <p>Renamed Lifecycle class</p> <p>The previously named \"Lifecycle\" class is now called \"Bootstrap\" and must be renamed accordingly. It must also implement the new \"MangooBootstrap\" interface instead of \"MangooLifecycle\".</p> <p>Updated Module configuration</p> <p>In additional of the renaming the Lifecylce class, the binding in the module configuration needs to be updated accordingly</p> <pre><code>bind(MangooBootstrap.class).to(Bootstrap.class);\n</code></pre> <p>Removed AuthenticationFilter</p> <p>The AuthenticationFilter has been removed as this is now handled via the new programmatically routes configuration (more on that see below).</p> <p>Removed ETag for dynamic content</p> <p>The ETag function for dynmaic content has been removed. Please update your inovcations of the Response class accordingly.</p> <p>Cleanup of Log4j2 integration</p> <p>The integration of Log4j2 is now much cleaner and closer to the standard. You are not bound anymore to use the configuration via *.yaml files and can now use all available file extensiosn to configure your logging. That being sad, the Jackson yaml library has been removed from mangoo-core. If you want to continue using the exsiting yaml file configuraiton you need to added the following dependency</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.fasterxml.jackson.dataformat&lt;/groupId&gt;\n    &lt;artifactId&gt;jackson-dataformat-yaml&lt;/artifactId&gt;\n    &lt;version&gt;2.9.7&lt;/version&gt;\n&lt;/dependency&gt;\n</code></pre> <p>Furthermore, the integration now follows the automatic configuration of Log4j2, looking for specific files during the startup process. This means, that the previous environment specific configuration with log4j2.prod.yaml, log4j2.dev.yaml and log4j2.test.yaml has been dropped. In order to configure Log4j2 to specific environment, we are now following the Log4j2 standard by using</p> <pre><code>log4j2-test.*\n</code></pre> <p>for dev and test. And</p> <pre><code>log4j2.*\n</code></pre> <p>for production environments.</p> <p>This makes it important to filter the test Log4j2 test configuration during the JAR build (see above). If the Log4j2 test configuration is not filtered during JAR build, it will become active in production.</p> <p>New config.props</p> <p>The previously used yaml configration (application.yaml) has been dropped in favour of Jodd props which give much more flexibility when it comes to cofiguring the application. Please refer to the updated documentation on how to setup the new Jodd props based configuration file.</p> <p>Migrated to JUnit5</p> <p>mangoo I/O has been updated from JUnit4 to JUnit5. Please refer to the updated documentaion on how to configure and run Unit tests with the updated version.</p> <p>New programmatically routing Configuration of routes through the routes.yaml file has been dropeed in favour of a programmatically route configuration. Please refer to the updated documentation on how to setup routes programmatically.</p>"},{"location":"migrations-archived/#from-4170-to-4180","title":"From 4.17.0 to 4.18.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4160-to-4170","title":"From 4.16.0 to 4.17.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4150-to-4160","title":"From 4.15.0 to 4.16.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4140-to-4150","title":"From 4.14.0 to 4.15.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4130-to-4140","title":"From 4.13.0 to 4.14.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4120-to-4130","title":"From 4.12.0 to 4.13.0","text":"<p>Due to security concerns in regards to JWT, refactorings where required that break API compatability.</p> <p>The application won't start if either a 512 Bit application secret is set or the following configuration values have a 512 Bit secret:</p> <pre><code> session:\n    cookie:\n       signkey: ...\n       encryptionkey: ...\n\n flash:\n    cookie:\n       signkey: ...        \n       encryptionkey: ...\n\n authentication:\n     cookie:\n         signkey : ...      \n         encryptionkey: ...\n</code></pre> <p>Please note, that starting with this version all values for the above cookies are encrypted by default.</p>"},{"location":"migrations-archived/#from-4110-to-4120","title":"From 4.11.0 to 4.12.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-4100-to-4110","title":"From 4.10.0 to 4.11.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-490-to-4100","title":"From 4.9.0 to 4.10.0","text":"<p>Required refactoring in the configuration lead to renaming of some configuration values.</p> <p>Previously the session cookie was configured</p> <pre><code>cookie:\n  name: ...\n  encrypt: ...\n</code></pre> <p>This has been refactored to</p> <pre><code>session:\n  cookie:\n    name:\n    encrypt: ..\n</code></pre> <p>Previously the authentication cookie was configured</p> <pre><code>auth:\n  cookie:\n    name: ...\n    encrypt: ...\n</code></pre> <p>This has been refactored to</p> <pre><code>authentication:\n  cookie:\n    name: ...\n      encrypt: ...\n</code></pre>"},{"location":"migrations-archived/#from-480-to-490","title":"From 4.8.0 to 4.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-470-to-480","title":"From 4.7.0 to 4.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-460-to-470","title":"From 4.6.0 to 4.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-450-to-460","title":"From 4.5.0 to 4.6.0","text":"<p>There was a required refactoring of the authentication class. Previously, the validLogin method did also execute the actual login. This has been removed and now the newly created login method has to be performed to actually do the login.</p> <p>Additionally some dependencies where challenged and removed. So you might see some red flags, when using dependencies that where shipped with mangoo I/O.</p>"},{"location":"migrations-archived/#from-440-to-450","title":"From 4.4.0 to 4.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-430-to-440","title":"From 4.3.0 to 4.4.0","text":"<p>This is basically a drop-in replacement. However, there have been some required refctorings on the Utility class. The RequestUtils and the TwoFactorUtils have been refactored and now sit in the helper package. To avoid concurrency issues these classes can not be accessed in a static way anymore and need to be injected.</p>"},{"location":"migrations-archived/#from-420-to-430","title":"From 4.2.0 to 4.3.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-410-to-420","title":"From 4.1.0 to 4.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-400-to-410","title":"From 4.0.0 to 4.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-3xx-to-400","title":"From 3.x.x to 4.0.0","text":"<p>mangoo I/O 4.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading to version 4.0.0:</p> <ul> <li>All @depracted classes and methods have been removed</li> <li>A new method in the MangooLifecycle interface has been added</li> </ul> <p>Changes in routes.yaml The syntax of the routes.yaml file has been updated to add more flexibility to the creating of routes. The new syntax requires the routes file to start with the following line:</p> <pre><code>routes:\n</code></pre> <p>Also each route has a new syntax. Here is an example</p> <pre><code>- method: GET\n  url: /\n  mapping: ApplicationController.index\n</code></pre> <p>Click here for the complete documentation on the new routes syntax.</p> <p>Changes to application.conf (1) As a new AJP connector has been added, the configuration for the listening host and port has been changed. The new syntax is as follows:</p> <pre><code>default:\n    connector:\n        http:\n            host      : localhost\n            port      : 9898\n        ajp:\n            host      : localhost\n            port      : 9899\n</code></pre> <p>Click here for the complete documentation on the new application properties. Also see the updated overview of the default configuration values.</p> <p>Changes to application.conf (2) Encryption with AES256 is now enforced, which requires you to set an application secret with at least 32 characters.</p> <p>Changes to application.conf (3) The basic authentication for the Admin UI has been updated. The password now has to be configured as an JBcrypt hased value. Hint: You can create a hashed value using the Admin UI.</p>"},{"location":"migrations-archived/#from-380-to-390","title":"From 3.8.0 to 3.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-370-to-380","title":"From 3.7.0 to 3.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-360-to-370","title":"From 3.6.0 to 3.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-350-to-360","title":"From 3.5.0 to 3.6.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-340-to-350","title":"From 3.4.0 to 3.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-330-to-340","title":"From 3.3.0 to 3.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-320-to-330","title":"From 3.2.0 to 3.3.0","text":"<p>This is basically a drop-in replacement. However, this release fixes a bug with the WebRequest, WebResponse and WebBrowser classes which were integrated from the test project in the 3.0.0 release. If you have used this classes (which probably failed due to the bug) I have bad news. As the bug was so major, these utility classes have been removed from the core and are now back in the test project.</p>"},{"location":"migrations-archived/#from-310-to-320","title":"From 3.1.0 to 3.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations-archived/#from-300-to-310","title":"From 3.0.0 to 3.1.0","text":"<p>There have been last minute changes on the Scheduler. If you are using the scheduler in manual mode (e.g. starting and stopping the scheduler manualy), then your need to catch the newly thrown exceptions from the scheudler class on some methods. Otherwise version 3.1.0 is a drop in replacement. If you have previously used the mailer extension to send emails from mangoo I/O, I have good news for you. Sending e-mails has been re-integrated into mangoo I/O but in a more fluent way than before. Check out the documentation on how to send e-mails.</p>"},{"location":"migrations-archived/#from-2xx-to-300","title":"From 2.x.x to 3.0.0","text":"<p>mangoo I/O 3.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading to version 3.0.0:</p> <ul> <li>The mangooio-test-utilities artifact has been renamed to mangooio-test</li> <li>All @depracted classes and methods have been removed</li> <li>The authentication class has been moved from io.mangoo.authentication to io.mangoo.routing.bindings.authentication</li> <li>The on-the-fly GZIP compression for CSS and JS files has been removed, as this belongs in a \u201creal\u201d webserver</li> <li>The log4j2.xml configuration has been switched to log4j2.yaml configuration, as all configuration files are now YAML based</li> <li>The Admin UI was completely refactored and is now available under the /@admin URL. The /@health URL has been removed completely</li> <li>The Test-Utitlites for HTTP Requests (Request, Response and Browser) have been moved to the core and have been renamed to WebRequest, WebResponse and WebBrowser</li> </ul>"},{"location":"migrations/","title":"Migrations","text":""},{"location":"migrations/#from-930-to-940","title":"From 9.3.0 to 9.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-920-to-930","title":"From 9.2.0 to 9.3.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-910-to-920","title":"From 9.1.0 to 9.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-900-to-910","title":"From 9.0.0 to 9.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-8110-to-900","title":"From 8.11.0 to 9.0.0","text":"<p>mangoo I/O 9.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading from 8.x:</p> <p>Removed Basic HTTP authentication</p> <p>The basic HTTP authentication that came with mangoo I/O has been removed. This should be done in a HTTP Proxy in front of your application.</p> <p>Refactored Response class</p> <p>The Response class and the handling of a response in a controller has been changed. Previously when a Response was returned in a controller, mangoo I/O automatically looked up the corresponding .ftl template and rendered it. Now when returning a Response.ok() it returns an empty response. Rendering only takes place when calling Response.ok().render() or when passing a variable to the template via Response.ok().render (\"foo\", \"bar\").</p> <p>Removed @admin/health endpoint</p> <p>The @admin/health endpoint is not available anymore.</p> <p>Switched from props based configuration yaml based configuration</p> <p>Please check the updated documentation for further details.</p>"},{"location":"migrations/#from-8100-to-8110","title":"From 8.10.0 to 8.11.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-890-to-8100","title":"From 8.9.0 to 8.10.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-880-to-890","title":"From 8.8.0 to 8.9.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-870-to-880","title":"From 8.7.0 to 8.8.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-860-to-870","title":"From 8.6.0 to 8.7.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-850-to-860","title":"From 8.5.0 to 8.6.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-840-to-850","title":"From 8.4.0 to 8.5.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-830-to-840","title":"From 8.3.0 to 8.4.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-820-to-830","title":"From 8.2.0 to 8.3.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-810-to-820","title":"From 8.1.0 to 8.2.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-800-to-810","title":"From 8.0.0 to 8.1.0","text":"<p>This is a drop-in replacement.</p>"},{"location":"migrations/#from-7190-to-800","title":"From 7.19.0 to 8.0.0","text":"<p>mangoo I/O 8.0.0 is a major release and contains code that will break API compatibility. These are the changes you need to consider when upgrading from 7.x:</p> <p>Java 21</p> <p>mangoo I/O now requires and uses Java 21.</p> <p>Removed Morphia in favour of direct MongoDB integration</p> <p>One of the major changes in 8.0.0 is the removal of Morphia in favour of a direct MongoDB integration. mangoo I/O now directly works with the native MongoDB Java Driver. Please check the documentation on how to handle persistence from now on.</p>"},{"location":"operating/","title":"Operating","text":"<p>The built-in maven-shade-plugin packages the application as a Fat-Jar, making it deployable in multiple ways. Below are two common methods.</p>"},{"location":"operating/#using-supervisord","title":"Using Supervisord","text":"<p>Supervisor is a process control system that helps manage and monitor long-running applications on UNIX-like systems. It ensures processes automatically start, restart on failure, and provides control through a command-line or web interface. It is commonly used for running background services, offering logging, process grouping, and easy configuration through <code>.conf</code> files.</p>"},{"location":"operating/#setting-up-supervisord","title":"Setting Up Supervisord","text":"<p>After copying your JAR file to the server, configure <code>supervisord</code> with the following settings:</p> <pre><code>[program:myapp]\ncommand=/usr/bin/java -jar /opt/myapp/my-fat-jar.jar\ndirectory=/opt/myapp\nautostart=true\nautorestart=true\nstderr_logfile=/var/log/myapp.err.log\nstdout_logfile=/var/log/myapp.out.log\nuser=myuser\nenvironment=JAVA_OPTS=\"-Xms512m -Xmx1024m\"\n</code></pre>"},{"location":"operating/#containerization","title":"Containerization","text":"<p>To run the JAR file in a Docker container, use the following Dockerfile:</p> <pre><code>FROM eclipse-temurin:21-jre-alpine\nWORKDIR /app\nCOPY target/myapp.jar myapp.jar\nENTRYPOINT [\"sh\", \"-c\", \"java $JAVA_OPTS -jar /app/myapp.jar\"]\n</code></pre> <p>This setup ensures the application runs efficiently in both supervised environments and containerized deployments.</p>"},{"location":"persistence/","title":"Persistence","text":"<p>Mangoo I/O provides a ready-to-use integration with MongoDB using the Java Sync Driver.</p>"},{"location":"persistence/#configuration","title":"Configuration","text":"<p>To set up a MongoDB connection, use the following configuration values:</p> <pre><code>persistence:\n  mongo:\n    host: 127.0.0.1\n    port: 27017\n    username: myUsername\n    password: myPassword\n    dbname: myDBname  # Database to connect to\n    authdb: myAuthDB  # Authentication database\n    auth: true        # Enable authentication (true/false)\n    embedded: true    # Start in-memory instance\n    package: models   # Package containing Morphia models\n</code></pre> <p>Note</p> <p>Setting <code>mongo.embedded = true</code> starts an embedded MongoDB instance for local development and testing. Ensure this is set to <code>false</code> in production environments.</p>"},{"location":"persistence/#entity-configuration","title":"Entity Configuration","text":"<p>To map a class to the persistence datastore, add the <code>@Collection</code> annotation to your POJO:</p> <pre><code>@Collection(name = \"people\")\npublic class Person extends Entity {\n    // Class implementation\n}\n</code></pre> <p>Extending <code>Entity</code> is optional but provides methods to retrieve the entity ID.</p>"},{"location":"persistence/#datastore","title":"Datastore","text":"<p>Once configured and models are mapped, the ready-to-use datastore can be injected:</p> <pre><code>private final Datastore datastore;\n\n@Inject\npublic DataService(Datastore datastore) {\n    this.datastore = Objects.requireNonNull(datastore, \"datastore cannot be null\");\n}\n</code></pre> <p>The datastore provides essential methods for working with entities:</p> <pre><code>findById(String id, Class&lt;T&gt; clazz);\nfindAll(Class&lt;T&gt; clazz);\ncountAll(Class&lt;T&gt; clazz);\nsave(Object object);\ndelete(Object object);\ndeleteAll(Class&lt;T&gt; clazz);\ndropDatabase();\n</code></pre> <p>For specific queries, use the fluent MongoDB API with the <code>query()</code> method:</p> <pre><code>List&lt;Booking&gt; bookings = datastore\n    .query(Booking.class)\n    .find(and(gte(\"booked\", fromDate), lte(\"booked\", toDate)))\n    .into(bookings);\n</code></pre> <p>Using <code>query()</code> grants access to all MongoDB Java client methods.</p>"},{"location":"persistence/#multiple-connections-and-users","title":"Multiple Connections and Users","text":"<p>For multiple connections with different users, adjust how you retrieve the datastore:</p> <pre><code>@Inject\npublic DataService(DatastoreProvider datastoreProvider) {\n    Objects.requireNonNull(datastoreProvider, \"datastoreProvider cannot be null\");\n    datastore = datastoreProvider.getDatastore(\"readonly\");\n}\n</code></pre> <p>The <code>\"readonly\"</code> string corresponds to a prefix set in the configuration:</p> <pre><code>persistence:\n  mongo:\n    readonly:\n      host: 127.0.0.1\n      port: 27017\n      username: myUsername\n      password: myPassword\n      dbname: myDBname  # Database to connect to\n      authdb: myAuthDB  # Authentication database\n      auth: true        # Enable authentication (true/false)\n      embedded: true    # Start in-memory instance\n      package: models   # Package containing Morphia models\n</code></pre> <p>This configuration enables separate connections for different user roles.</p>"},{"location":"routing/","title":"Routing","text":"<p>One of the core components of a Mangoo I/O application is mapping request URLs to controller classes and their methods. Whether rendering a template, sending JSON, or returning an HTTP 200 OK, every request must be mapped. This mapping is handled in the <code>Bootstrap.java</code> class, located in the <code>/src/main/java/app</code> package of your application.</p>"},{"location":"routing/#routing-example","title":"Routing Example","text":"<p>Below is an example of how routing is defined:</p> <pre><code>@Override\npublic void initializeRoutes() {\n    Bind.controller(ApplicationController.class).withRoutes(\n        On.get().to(\"/\").respondWith(\"index\")\n    );\n}\n</code></pre> <p>This example maps a <code>GET</code> request to <code>/</code> to the <code>index</code> method of the <code>ApplicationController</code> class. When a user accesses <code>/</code> in a browser, the <code>index</code> method in <code>ApplicationController</code> is called.</p>"},{"location":"routing/#supported-request-methods","title":"Supported Request Methods","text":"<p>You can use the following request methods to define your mappings:</p> <pre><code>GET\nPOST\nOPTIONS\nPUT\nHEAD\nDELETE\nPATCH\n</code></pre>"},{"location":"routing/#handling-long-running-requests","title":"Handling Long-Running Requests","text":"<p>Mangoo I/O uses Undertow for non-blocking I/O. However, some situations may require a long-running request. To allow blocking in a request, add the <code>blocking</code> attribute to your request mapping:</p> <pre><code>@Override\npublic void initializeRoutes() {\n    Bind.controller(ApplicationController.class).withRoutes(\n        On.get().to(\"/\").respondWith(\"index\").withNonBlocking()\n    );\n}\n</code></pre>"},{"location":"routing/#authentication","title":"Authentication","text":"<p>Authentication can be applied at both the controller and method levels:</p> <pre><code>@Override\npublic void initializeRoutes() {\n    Bind.controller(ApplicationController.class).withAuthentication().withRoutes(\n        On.get().to(\"/\").respondWith(\"index\")\n    );\n\n    Bind.controller(DashboardController.class).withRoutes(\n        On.get().to(\"/\").respondWith(\"index\").withAuthentication(),\n        On.get().to(\"/login\").respondWith(\"login\")\n    );\n}\n</code></pre>"},{"location":"routing/#serving-static-files","title":"Serving Static Files","text":"<p>To serve static files (e.g., assets), map them in your <code>routes.yaml</code>. You can specify individual files or entire directories:</p> <pre><code>Bind.pathResource().to(\"/assets/\");\nBind.fileResource().to(\"/robots.txt\");\n</code></pre> <p>The mappings correspond to files in the <code>src/main/resources/files</code> folder:</p> <pre><code>/src/main/resources/files/robots.txt\n/src/main/resources/files/assets/\n</code></pre>"},{"location":"routing/#server-sent-events-sse","title":"Server-Sent Events (SSE)","text":"<p>Mappings for Server-Sent Events (SSE) are defined in the <code>Bootstrap.java</code> class. Since SSE is a unidirectional protocol, it does not require a controller:</p> <pre><code>Bind.serverSentEvent().to(\"/mysse\");\n</code></pre> <p>If authentication is required for SSE or WebSockets, simply add the authentication attribute:</p> <pre><code>Bind.serverSentEvent().to(\"/sseauth\").withAuthentication();\n</code></pre> <p>This requires an authentication cookie in the request. If the cookie is missing, the SSE connection will be rejected.</p> <p>For further details, refer to the Server-Sent Events documentation.</p>"},{"location":"scheduler/","title":"Scheduler","text":"<p>mangoo I/O enables task scheduling using plain Java methods. It supports two types of scheduled tasks: periodic (e.g., every 3 minutes) and cron-based execution.</p>"},{"location":"scheduler/#repeating-task","title":"Repeating Task","text":"<p>To create a repeating task, define a simple POJO and annotate the method with <code>@Run</code> specifying the execution interval.</p> <pre><code>public class InfoJob {\n    @Run(at = \"Every 3m\")\n    public void execute() {\n        // Task logic here\n    }\n}\n</code></pre>"},{"location":"scheduler/#interval-configuration","title":"Interval Configuration","text":"<p>Use the <code>at</code> parameter to specify the execution frequency:</p> <ul> <li>s = seconds (e.g., <code>\"Every 5s\"</code>)</li> <li>m = minutes (e.g., <code>\"Every 15m\"</code>)</li> <li>h = hours (e.g., <code>\"Every 4h\"</code>)</li> </ul>"},{"location":"scheduler/#cron-task","title":"Cron Task","text":"<p>To create a cron-based task, define a POJO and annotate the method with <code>@Run</code>, providing a cron expression.</p> <pre><code>public class InfoJobCron {\n    @Run(at = \"0/1 * * * *\")\n    public void execute() {\n        // Task logic here\n    }\n}\n</code></pre>"},{"location":"scheduler/#cron-expression","title":"Cron Expression","text":"<p>Cron expressions follow the standard format: <code>\"seconds minutes hours day month day-of-week\"</code>.</p> <p>This approach provides flexible scheduling for tasks that require execution at specific times or intervals.</p>"},{"location":"sessions/","title":"Sessions","text":"<p>mangoo I/O employs a client-side session approach within its shared-nothing architecture. This means all session data for a user is stored inside a cookie on the client side.</p>"},{"location":"sessions/#advantages-and-limitations","title":"Advantages and Limitations","text":"<ul> <li>Scalability: Since session data is stored on the client, scaling the application becomes seamless.</li> <li>Storage Limitation: Cookie storage is limited to approximately 4KB, restricting the amount of session data.</li> </ul>"},{"location":"sessions/#using-sessions-in-mangoo-io","title":"Using Sessions in mangoo I/O","text":"<p>To work with sessions, simply pass the <code>Session</code> class into your controller method:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport io.mangoo.routing.bindings.Session;\n\npublic class SessionController {\n    public Response session(Session session) {\n        session.add(\"foo\", \"this is a session value\");\n        return Response.ok();\n    }\n}\n</code></pre>"},{"location":"sessions/#session-management","title":"Session Management","text":"<p>The <code>Session</code> class provides convenient methods for:</p> <ul> <li>Adding session data: <code>session.add(\"key\", \"value\");</code></li> <li>Removing a session entry: <code>session.remove(\"key\");</code></li> <li>Clearing all session data: <code>session.clear();</code></li> </ul>"},{"location":"sessions/#configuring-session-properties","title":"Configuring Session Properties","text":"<p>By default, the session cookie has a lifespan of one day (86,400 seconds). The session expiration and cookie name can be modified in the <code>config.yaml</code> file:</p> <pre><code>session:\n    cookie:\n        expires: 86400\n        name: My-Session\n</code></pre> <p>This allows customization of session behavior based on application needs.</p>"},{"location":"sse/","title":"Server-Sent Events","text":"<p>mangoo I/O provides built-in support for Server-Sent Events (SSE), enabling real-time one-way communication from the server to the client.</p>"},{"location":"sse/#routing","title":"Routing","text":"<p>To set up Server-Sent Events, define a route for the SSE endpoint in your <code>Bootstrap</code> class:</p> <pre><code>Bind.serverSentEvent().to(\"/sse\");\n</code></pre>"},{"location":"sse/#sending-data","title":"Sending Data","text":"<p>Once the routing is configured, you can send Server-Sent Events from anywhere in your application using the <code>ServerSentEventManager</code>:</p> <pre><code>private final ServerSentEventManager sse;\n\n@Inject\npublic MyClass(ServerSentEventManager sse) {\n    this.sse = Objects.requireNonNull(sse, \"sse cannot be null\");\n}\n\npublic void sendData() {\n    sse.send(\"/sse\", \"data\");\n}\n</code></pre>"},{"location":"sse/#data-format","title":"Data Format","text":"<p>The data must be a string, such as a JSON object, and can be formatted according to your needs.</p> <p>For more details on setting up Server-Sent Events on the client side, refer to the Mozilla Developer Documentation.</p>"},{"location":"templating/","title":"Templating","text":"<p>Mangoo I/O leverages Freemarker for rendering HTML pages.</p>"},{"location":"templating/#template-variables","title":"Template Variables","text":"<p>Mangoo I/O provides several default variables automatically assigned to templates, offering useful functionality out of the box:</p> <pre><code>Form\nFlash\nSession\ni18n\nRoute\nLocation\nPrettytime\n</code></pre> <p>Note</p> <p>These variable names cannot be passed into a template manually. Assigning a variable with the same name in your controller would overwrite the built-in ones, leading to rendering failures and exceptions.</p>"},{"location":"templating/#pretty-time","title":"Pretty Time","text":"<p>Pretty Time allows you to format localized relative dates dynamically. For example, a date representing \"yesterday\" would be formatted as \"1 day ago\" based on the request's preferred locale.</p>"},{"location":"templating/#usage","title":"Usage","text":"<pre><code>${prettytime(localDateTime)}  // Based on LocalDateTime\n${prettytime(localDate)}      // Based on LocalDate\n${prettytime(date)}           // Based on Date\n</code></pre>"},{"location":"templating/#location","title":"Location","text":"<p>Location helps determine the current URL accessing the template. This is useful for dynamic navigation highlighting.</p>"},{"location":"templating/#usage_1","title":"Usage","text":"<pre><code>&lt;#if location(\"ApplicationController:location\")&gt;DO SOMETHING&lt;/#if&gt;\n</code></pre> <p>To validate the above, provide the Controller and method. The check is case-insensitive.</p>"},{"location":"templating/#route","title":"Route","text":"<p>Route enables reverse routing, allowing URLs to be dynamically generated instead of being hardcoded. This ensures that links always align with mapped controller methods.</p>"},{"location":"templating/#basic-usage","title":"Basic Usage","text":"<pre><code>&lt;a href=\"${route(\"ApplicationController:route\")}\"&gt;Route&lt;/a&gt;\n</code></pre> <p>If <code>ApplicationController.class</code> contains a method <code>route()</code> mapped to <code>/route</code>, the above will render as:</p> <pre><code>&lt;a href=\"/route\"&gt;Route&lt;/a&gt;\n</code></pre>"},{"location":"templating/#passing-attributes","title":"Passing Attributes","text":"<p>You can pass additional attributes to the function:</p> <pre><code>&lt;a href=\"${route(\"ApplicationController:route\", \"foo\")}\"&gt;Route&lt;/a&gt;\n</code></pre> <p>This outputs:</p> <pre><code>&lt;a href=\"/route/foo\"&gt;Route&lt;/a&gt;\n</code></pre>"},{"location":"testing/","title":"Testing","text":"<p>mangoo I/O provides tools for testing applications. These utilities are not part of the core framework and require an additional dependency. This allows setting the scope to <code>test</code> in the Maven configuration, ensuring the dependency is only included for testing.</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;io.mangoo&lt;/groupId&gt;\n    &lt;artifactId&gt;mangooio-test&lt;/artifactId&gt;\n    &lt;version&gt;LATEST&lt;/version&gt;\n    &lt;scope&gt;test&lt;/scope&gt;\n&lt;/dependency&gt;\n</code></pre>"},{"location":"testing/#backend-testing","title":"Backend Testing","text":"<p>mangoo I/O includes convenient classes for unit testing applications. Below is an example of how a unit test using these utilities might look:</p> <pre><code>import io.mangoo.test.utils.TestRequest;\nimport io.mangoo.test.utils.TestResponse;\nimport static org.hamcrest.MatcherAssert.assertThat;\nimport static org.hamcrest.Matchers.*;\n\n@Test\npublic void testIndex() {\n    // Given\n    TestResponse response = TestRequest.get(\"/\").execute();\n\n    // Then\n    assertThat(response, not(nullValue()));\n    assertThat(response.getContentType(), equalTo(TEXT_HTML));\n    assertThat(response.getStatusCode(), equalTo(StatusCodes.OK));\n}\n</code></pre>"},{"location":"testing/#request-response-testing","title":"Request-Response Testing","text":"<p>A common use case for testing is verifying request-response interactions. mangoo I/O provides utilities for constructing test requests and processing responses. The request utility supports authentication, headers, and other modifications via a fluent API.</p>"},{"location":"testing/#simulating-browser-sessions","title":"Simulating Browser Sessions","text":"<p>For scenarios where request data needs to persist across multiple requests, mangoo I/O provides the <code>TestBrowser</code> class:</p> <pre><code>TestBrowser browser = TestBrowser.open();\n</code></pre> <p>This allows session persistence across multiple requests, simulating real browser interactions. Below is an example:</p> <pre><code>import io.mangoo.test.utils.TestBrowser;\nimport io.mangoo.test.utils.TestRequest;\nimport io.mangoo.test.utils.TestResponse;\n\n// Given\nTestBrowser browser = TestBrowser.open();\n\n// When\nTestResponse response = browser.withUri(\"/dologin\")\n    .withMethod(Methods.POST)\n    .execute();\n\n// Then\nassertThat(response, not(nullValue()));\nassertThat(response.getStatusCode(), equalTo(StatusCodes.FOUND));\n\n// When\nresponse = browser.withUri(\"/authenticationrequired\")\n    .withDisableRedirects(true)\n    .withMethod(Methods.GET)\n    .execute();\n</code></pre> <p>In this example, session data (such as cookies) from the first request persists into subsequent requests, allowing realistic browser-like testing of the application.</p>"},{"location":"utils/","title":"Utils","text":""},{"location":"utils/#overview","title":"Overview","text":"<p>The <code>io.mangoo.utils</code> package in the Mangoo I/O framework provides a set of utility classes that simplify various operations. These utilities help with byte processing, encoding, date handling, JSON operations, request handling, and persistence. This documentation outlines the available classes and their functionalities.</p>"},{"location":"utils/#utility-classes","title":"Utility Classes","text":""},{"location":"utils/#1-byteutils","title":"1. ByteUtils","text":"<p>Description: Provides methods for calculating the bit length of byte arrays and strings.</p> <p>Key Features: - Determine bit length of byte arrays - Calculate bit length of a given string</p>"},{"location":"utils/#2-codecutils","title":"2. CodecUtils","text":"<p>Description: Offers encoding and decoding functionalities, including Base64 operations and URL encoding/decoding.</p> <p>Key Features: - Encode and decode Base64 data - Perform URL encoding and decoding - Ensure proper data formatting and transmission</p>"},{"location":"utils/#3-dateutils","title":"3. DateUtils","text":"<p>Description: Contains methods for converting between <code>LocalDateTime</code> and <code>Date</code> objects, as well as formatting dates into human-readable strings.</p> <p>Key Features: - Convert <code>LocalDateTime</code> to <code>Date</code> - Convert <code>Date</code> to <code>LocalDateTime</code> - Format date values into human-readable strings</p>"},{"location":"utils/#4-jsonutils","title":"4. JsonUtils","text":"<p>Description: Utilizes the Jackson library to provide JSON serialization and deserialization methods.</p> <p>Key Features: - Convert Java objects to JSON strings - Deserialize JSON strings into Java objects - Streamline JSON processing within the application</p>"},{"location":"utils/#5-mangooutils","title":"5. MangooUtils","text":"<p>Description: Offers a collection of general-purpose utility methods, including string manipulation, class loading, and resource handling.</p> <p>Key Features: - Handle string manipulation efficiently - Load Java classes dynamically - Access and manage application resources</p>"},{"location":"utils/#6-persistenceutils","title":"6. PersistenceUtils","text":"<p>Description: Manages mappings between class types and their corresponding collection names in the datastore.</p> <p>Key Features: - Associate class types with collection names - Facilitate organized data persistence</p>"},{"location":"utils/#7-requestutils","title":"7. RequestUtils","text":"<p>Description: Provides methods for handling HTTP request data, such as extracting parameters, headers, and cookies.</p> <p>Key Features: - Extract request parameters - Retrieve request headers - Manage HTTP cookies</p>"},{"location":"utils/#usage-examples","title":"Usage Examples","text":"<p>Each class includes static methods that can be directly accessed without needing to instantiate objects. Below are a few examples:</p>"},{"location":"utils/#example-encoding-data-with-codecutils","title":"Example: Encoding Data with <code>CodecUtils</code>","text":"<pre><code>String encoded = CodecUtils.encodeBase64(\"Hello, Mangoo!\");\nString decoded = CodecUtils.decodeBase64(encoded);\n</code></pre>"},{"location":"utils/#example-formatting-dates-with-dateutils","title":"Example: Formatting Dates with <code>DateUtils</code>","text":"<pre><code>String formattedDate = DateUtils.formatDate(LocalDateTime.now());\n</code></pre>"},{"location":"utils/#example-handling-json-with-jsonutils","title":"Example: Handling JSON with <code>JsonUtils</code>","text":"<pre><code>String jsonString = JsonUtils.toJson(myObject);\nMyObject object = JsonUtils.fromJson(jsonString, MyObject.class);\n</code></pre>"},{"location":"working-with-json/","title":"Working with JSON","text":"<p>mangoo I/O uses Jackson with Blackbird for JSON serialization and deserialization of objects.</p>"},{"location":"working-with-json/#json-input","title":"JSON Input","text":"<p>To retrieve JSON sent to your mangoo I/O application, you have three options:</p> <ol> <li>Automatic object serialization</li> <li>Generic object conversion</li> <li>Working with the raw JSON string</li> </ol>"},{"location":"working-with-json/#custom-serializer","title":"Custom Serializer","text":"<p>By default, mangoo I/O does not write out nulls, empty lists, or default values. To ensure a value is included even if it is empty, <code>null</code>, <code>false</code>, or <code>0</code>, use the <code>@JsonInclude</code> annotation. To exclude a value from JSON generation, use <code>@JsonIgnore</code>.</p> <pre><code>import com.fasterxml.jackson.annotation.JsonInclude;\nimport com.fasterxml.jackson.annotation.JsonIgnore;\n\npublic class Car {\n    @JsonInclude\n    public String brand = null;\n\n    @JsonInclude\n    public int doors = 0;\n\n    @JsonIgnore\n    public String comment = \"blablabla\";\n\n    public String foo = \"blablabla\";\n\n    public Car() {}\n}\n</code></pre>"},{"location":"working-with-json/#automatic-object-conversion","title":"Automatic Object Conversion","text":"<p>Given the following JSON input:</p> <pre><code>{\n    \"brand\": \"Nissan\",\n    \"doors\": 4\n}\n</code></pre> <p>You can automatically convert it to a Java object in a controller:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport models.Car;\n\npublic class JsonController {\n    public Response parse(Car car) {\n        // Process the car object\n        ...\n    }\n}\n</code></pre> <p>mangoo I/O automatically deserializes JSON into a POJO, making it available in the controller.</p> <p>Note</p> <p>Automatic conversion only works with <code>PUT</code> or <code>POST</code> requests having <code>Content-Type: application/json</code>.</p> <p>If you do not have a POJO but still need to retrieve JSON content, you can use a generic approach:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport io.mangoo.routing.bindings.Request;\nimport java.util.Map;\n\npublic class MyController {\n    public Response parse(Request request) {\n        Map&lt;String, Object&gt; json = request.getBodyAsJsonMap();\n        String foo = (String) json.get(\"firstname\");\n    }\n}\n</code></pre>"},{"location":"working-with-json/#handling-raw-json-string","title":"Handling Raw JSON String","text":"<p>If you prefer working with the raw JSON string, retrieve it from the request body:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport io.mangoo.routing.bindings.Request;\n\npublic class MyController {\n    public Response parse(Request request) {\n        String body = request.getBody();\n        ...\n    }\n}\n</code></pre>"},{"location":"working-with-json/#json-output","title":"JSON Output","text":"<p>Consider the following POJO:</p> <pre><code>package models;\n\npublic class Person {\n    private String firstname;\n    private String lastname;\n    private int age;\n\n    public Person(String firstname, String lastname, int age) {\n        this.firstname = firstname;\n        this.lastname = lastname;\n        this.age = age;\n    }\n\n    public String getFirstname() {\n        return firstname;\n    }\n\n    public String getLastname() {\n        return lastname;\n    }\n\n    public int getAge() {\n        return age;\n    }\n}\n</code></pre> <p>To create a new <code>Person</code> object and send it as a JSON response:</p> <pre><code>package controllers;\n\nimport io.mangoo.routing.Response;\nimport models.Person;\n\npublic class JsonController {\n    public Response render() {\n        Person person = new Person(\"Peter\", \"Parker\", 24);\n        return Response.ok().bodyJson(person);\n    }\n}\n</code></pre>"},{"location":"working-with-json/#json-response-output","title":"JSON Response Output","text":"<pre><code>{\n    \"firstname\": \"Peter\",\n    \"lastname\": \"Parker\",\n    \"age\": 24\n}\n</code></pre>"}]}